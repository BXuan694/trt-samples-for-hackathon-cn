[09/07/2022-04:04:42] [TRT] [I] [MemUsageChange] Init CUDA: CPU +195, GPU +0, now: CPU 217, GPU 433 (MiB)
[09/07/2022-04:04:43] [TRT] [I] [MemUsageChange] Init builder kernel library: CPU +7, GPU +2, now: CPU 243, GPU 427 (MiB)
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::BatchTilePlugin_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::BatchedNMS_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::BatchedNMSDynamic_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::CoordConvAC version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::CropAndResize version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::CropAndResizeDynamic version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::DecodeBbox3DPlugin version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::DetectionLayer_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::EfficientNMS_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::EfficientNMS_ONNX_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::EfficientNMS_Explicit_TF_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::EfficientNMS_Implicit_TF_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::FlattenConcat_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::GenerateDetection_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::GridAnchor_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::GridAnchorRect_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::InstanceNormalization_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::LReLU_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::MultilevelCropAndResize_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::MultilevelProposeROI_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::MultiscaleDeformableAttnPlugin_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::NMS_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::NMSDynamic_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::Normalize_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::PillarScatterPlugin version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::PriorBox_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::ProposalLayer_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::Proposal version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::ProposalDynamic version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::PyramidROIAlign_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::Region_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::Reorg_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::ResizeNearest_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::RPROI_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::ScatterND version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::SpecialSlice_TRT version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::Split version 1
[09/07/2022-04:04:43] [TRT] [V] Registered plugin creator - ::VoxelGeneratorPlugin version 1
[09/07/2022-04:04:43] [TRT] [V] Adding network input: tensor-0 with dtype: float32, dimensions: (-1, -1, 1)
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0 for ONNX tensor: tensor-0
[09/07/2022-04:04:43] [TRT] [V] Importing initializer: constant1x256
[09/07/2022-04:04:43] [TRT] [V] Importing initializer: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] Importing initializer: constant2048
[09/07/2022-04:04:43] [TRT] [V] Importing initializer: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] Importing initializer: constant256
[09/07/2022-04:04:43] [TRT] [V] Importing initializer: constantM1
[09/07/2022-04:04:43] [TRT] [W] parsers/onnx/onnx2trt_utils.cpp:367: Your ONNX model has been generated with INT64 weights, while TensorRT does not natively support INT64. Attempting to cast down to INT32.
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU0 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant1x256
[09/07/2022-04:04:43] [TRT] [V] MMU0 [MatMul] inputs: [tensor-0 -> (-1, -1, 1)[FLOAT]], [constant1x256 -> (1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: constant1x256 for ONNX node: constant1x256
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU0 for ONNX node: MMU0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1 for ONNX tensor: tensor-1
[09/07/2022-04:04:43] [TRT] [V] MMU0 [MatMul] outputs: [tensor-1 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-0 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-0 [MatMul] inputs: [tensor-1 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: constant256x2048 for ONNX node: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-0 for ONNX node: MMU-0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0-1 for ONNX tensor: tensor-0-1
[09/07/2022-04:04:43] [TRT] [V] MMU-0 [MatMul] outputs: [tensor-0-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-0 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-0 [Add] inputs: [tensor-0-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: constant2048 for ONNX node: constant2048
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-0 for ONNX node: AddU-0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0-2 for ONNX tensor: tensor-0-2
[09/07/2022-04:04:43] [TRT] [V] AddU-0 [Add] outputs: [tensor-0-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-0 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-0 [Relu] inputs: [tensor-0-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-0 for ONNX node: ReLUU-0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0-3 for ONNX tensor: tensor-0-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-0 [Relu] outputs: [tensor-0-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-0 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-0 [MatMul] inputs: [tensor-0-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: constant2048x256 for ONNX node: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-0 for ONNX node: MMD-0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0-4 for ONNX tensor: tensor-0-4
[09/07/2022-04:04:43] [TRT] [V] MMD-0 [MatMul] outputs: [tensor-0-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-0 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-0 [Add] inputs: [tensor-0-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: constant256 for ONNX node: constant256
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-0 for ONNX node: AddD-0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0-5 for ONNX tensor: tensor-0-5
[09/07/2022-04:04:43] [TRT] [V] AddD-0 [Add] outputs: [tensor-0-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-0 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-0 [Relu] inputs: [tensor-0-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-0 for ONNX node: ReLUD-0
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-0-6 for ONNX tensor: tensor-0-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-0 [Relu] outputs: [tensor-0-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-1 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-0-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-1 [MatMul] inputs: [tensor-0-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-1 for ONNX node: MMU-1
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1-1 for ONNX tensor: tensor-1-1
[09/07/2022-04:04:43] [TRT] [V] MMU-1 [MatMul] outputs: [tensor-1-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-1 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-1 [Add] inputs: [tensor-1-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-1 for ONNX node: AddU-1
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1-2 for ONNX tensor: tensor-1-2
[09/07/2022-04:04:43] [TRT] [V] AddU-1 [Add] outputs: [tensor-1-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-1 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-1 [Relu] inputs: [tensor-1-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-1 for ONNX node: ReLUU-1
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1-3 for ONNX tensor: tensor-1-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-1 [Relu] outputs: [tensor-1-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-1 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-1 [MatMul] inputs: [tensor-1-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-1 for ONNX node: MMD-1
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1-4 for ONNX tensor: tensor-1-4
[09/07/2022-04:04:43] [TRT] [V] MMD-1 [MatMul] outputs: [tensor-1-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-1 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-1 [Add] inputs: [tensor-1-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-1 for ONNX node: AddD-1
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1-5 for ONNX tensor: tensor-1-5
[09/07/2022-04:04:43] [TRT] [V] AddD-1 [Add] outputs: [tensor-1-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-1 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-1 [Relu] inputs: [tensor-1-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-1 for ONNX node: ReLUD-1
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-1-6 for ONNX tensor: tensor-1-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-1 [Relu] outputs: [tensor-1-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-2 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-1-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-2 [MatMul] inputs: [tensor-1-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-2 for ONNX node: MMU-2
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-2-1 for ONNX tensor: tensor-2-1
[09/07/2022-04:04:43] [TRT] [V] MMU-2 [MatMul] outputs: [tensor-2-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-2 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-2-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-2 [Add] inputs: [tensor-2-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-2 for ONNX node: AddU-2
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-2-2 for ONNX tensor: tensor-2-2
[09/07/2022-04:04:43] [TRT] [V] AddU-2 [Add] outputs: [tensor-2-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-2 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-2-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-2 [Relu] inputs: [tensor-2-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-2 for ONNX node: ReLUU-2
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-2-3 for ONNX tensor: tensor-2-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-2 [Relu] outputs: [tensor-2-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-2 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-2-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-2 [MatMul] inputs: [tensor-2-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-2 for ONNX node: MMD-2
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-2-4 for ONNX tensor: tensor-2-4
[09/07/2022-04:04:43] [TRT] [V] MMD-2 [MatMul] outputs: [tensor-2-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-2 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-2-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-2 [Add] inputs: [tensor-2-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-2 for ONNX node: AddD-2
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-2-5 for ONNX tensor: tensor-2-5
[09/07/2022-04:04:43] [TRT] [V] AddD-2 [Add] outputs: [tensor-2-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-2 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-2-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-2 [Relu] inputs: [tensor-2-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-2 for ONNX node: ReLUD-2
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-2-6 for ONNX tensor: tensor-2-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-2 [Relu] outputs: [tensor-2-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-3 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-2-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-3 [MatMul] inputs: [tensor-2-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-3 for ONNX node: MMU-3
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-3-1 for ONNX tensor: tensor-3-1
[09/07/2022-04:04:43] [TRT] [V] MMU-3 [MatMul] outputs: [tensor-3-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-3 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-3-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-3 [Add] inputs: [tensor-3-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-3 for ONNX node: AddU-3
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-3-2 for ONNX tensor: tensor-3-2
[09/07/2022-04:04:43] [TRT] [V] AddU-3 [Add] outputs: [tensor-3-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-3 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-3-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-3 [Relu] inputs: [tensor-3-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-3 for ONNX node: ReLUU-3
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-3-3 for ONNX tensor: tensor-3-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-3 [Relu] outputs: [tensor-3-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-3 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-3-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-3 [MatMul] inputs: [tensor-3-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-3 for ONNX node: MMD-3
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-3-4 for ONNX tensor: tensor-3-4
[09/07/2022-04:04:43] [TRT] [V] MMD-3 [MatMul] outputs: [tensor-3-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-3 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-3-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-3 [Add] inputs: [tensor-3-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-3 for ONNX node: AddD-3
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-3-5 for ONNX tensor: tensor-3-5
[09/07/2022-04:04:43] [TRT] [V] AddD-3 [Add] outputs: [tensor-3-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-3 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-3-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-3 [Relu] inputs: [tensor-3-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-3 for ONNX node: ReLUD-3
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-3-6 for ONNX tensor: tensor-3-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-3 [Relu] outputs: [tensor-3-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-4 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-3-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-4 [MatMul] inputs: [tensor-3-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-4 for ONNX node: MMU-4
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-4-1 for ONNX tensor: tensor-4-1
[09/07/2022-04:04:43] [TRT] [V] MMU-4 [MatMul] outputs: [tensor-4-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-4 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-4-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-4 [Add] inputs: [tensor-4-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-4 for ONNX node: AddU-4
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-4-2 for ONNX tensor: tensor-4-2
[09/07/2022-04:04:43] [TRT] [V] AddU-4 [Add] outputs: [tensor-4-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-4 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-4-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-4 [Relu] inputs: [tensor-4-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-4 for ONNX node: ReLUU-4
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-4-3 for ONNX tensor: tensor-4-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-4 [Relu] outputs: [tensor-4-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-4 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-4-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-4 [MatMul] inputs: [tensor-4-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-4 for ONNX node: MMD-4
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-4-4 for ONNX tensor: tensor-4-4
[09/07/2022-04:04:43] [TRT] [V] MMD-4 [MatMul] outputs: [tensor-4-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-4 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-4-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-4 [Add] inputs: [tensor-4-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-4 for ONNX node: AddD-4
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-4-5 for ONNX tensor: tensor-4-5
[09/07/2022-04:04:43] [TRT] [V] AddD-4 [Add] outputs: [tensor-4-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-4 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-4-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-4 [Relu] inputs: [tensor-4-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-4 for ONNX node: ReLUD-4
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-4-6 for ONNX tensor: tensor-4-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-4 [Relu] outputs: [tensor-4-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-5 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-4-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-5 [MatMul] inputs: [tensor-4-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-5 for ONNX node: MMU-5
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-5-1 for ONNX tensor: tensor-5-1
[09/07/2022-04:04:43] [TRT] [V] MMU-5 [MatMul] outputs: [tensor-5-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-5 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-5-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-5 [Add] inputs: [tensor-5-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-5 for ONNX node: AddU-5
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-5-2 for ONNX tensor: tensor-5-2
[09/07/2022-04:04:43] [TRT] [V] AddU-5 [Add] outputs: [tensor-5-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-5 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-5-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-5 [Relu] inputs: [tensor-5-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-5 for ONNX node: ReLUU-5
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-5-3 for ONNX tensor: tensor-5-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-5 [Relu] outputs: [tensor-5-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-5 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-5-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-5 [MatMul] inputs: [tensor-5-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-5 for ONNX node: MMD-5
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-5-4 for ONNX tensor: tensor-5-4
[09/07/2022-04:04:43] [TRT] [V] MMD-5 [MatMul] outputs: [tensor-5-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-5 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-5-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-5 [Add] inputs: [tensor-5-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-5 for ONNX node: AddD-5
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-5-5 for ONNX tensor: tensor-5-5
[09/07/2022-04:04:43] [TRT] [V] AddD-5 [Add] outputs: [tensor-5-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-5 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-5-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-5 [Relu] inputs: [tensor-5-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-5 for ONNX node: ReLUD-5
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-5-6 for ONNX tensor: tensor-5-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-5 [Relu] outputs: [tensor-5-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-6 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-5-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-6 [MatMul] inputs: [tensor-5-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-6 for ONNX node: MMU-6
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-6-1 for ONNX tensor: tensor-6-1
[09/07/2022-04:04:43] [TRT] [V] MMU-6 [MatMul] outputs: [tensor-6-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-6 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-6-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-6 [Add] inputs: [tensor-6-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-6 for ONNX node: AddU-6
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-6-2 for ONNX tensor: tensor-6-2
[09/07/2022-04:04:43] [TRT] [V] AddU-6 [Add] outputs: [tensor-6-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-6 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-6-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-6 [Relu] inputs: [tensor-6-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-6 for ONNX node: ReLUU-6
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-6-3 for ONNX tensor: tensor-6-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-6 [Relu] outputs: [tensor-6-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-6 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-6-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-6 [MatMul] inputs: [tensor-6-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-6 for ONNX node: MMD-6
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-6-4 for ONNX tensor: tensor-6-4
[09/07/2022-04:04:43] [TRT] [V] MMD-6 [MatMul] outputs: [tensor-6-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-6 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-6-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-6 [Add] inputs: [tensor-6-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-6 for ONNX node: AddD-6
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-6-5 for ONNX tensor: tensor-6-5
[09/07/2022-04:04:43] [TRT] [V] AddD-6 [Add] outputs: [tensor-6-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-6 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-6-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-6 [Relu] inputs: [tensor-6-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-6 for ONNX node: ReLUD-6
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-6-6 for ONNX tensor: tensor-6-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-6 [Relu] outputs: [tensor-6-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-7 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-6-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-7 [MatMul] inputs: [tensor-6-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-7 for ONNX node: MMU-7
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-7-1 for ONNX tensor: tensor-7-1
[09/07/2022-04:04:43] [TRT] [V] MMU-7 [MatMul] outputs: [tensor-7-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-7 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-7-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-7 [Add] inputs: [tensor-7-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-7 for ONNX node: AddU-7
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-7-2 for ONNX tensor: tensor-7-2
[09/07/2022-04:04:43] [TRT] [V] AddU-7 [Add] outputs: [tensor-7-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-7 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-7-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-7 [Relu] inputs: [tensor-7-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-7 for ONNX node: ReLUU-7
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-7-3 for ONNX tensor: tensor-7-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-7 [Relu] outputs: [tensor-7-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-7 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-7-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-7 [MatMul] inputs: [tensor-7-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-7 for ONNX node: MMD-7
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-7-4 for ONNX tensor: tensor-7-4
[09/07/2022-04:04:43] [TRT] [V] MMD-7 [MatMul] outputs: [tensor-7-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-7 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-7-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-7 [Add] inputs: [tensor-7-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-7 for ONNX node: AddD-7
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-7-5 for ONNX tensor: tensor-7-5
[09/07/2022-04:04:43] [TRT] [V] AddD-7 [Add] outputs: [tensor-7-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-7 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-7-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-7 [Relu] inputs: [tensor-7-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-7 for ONNX node: ReLUD-7
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-7-6 for ONNX tensor: tensor-7-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-7 [Relu] outputs: [tensor-7-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-8 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-7-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-8 [MatMul] inputs: [tensor-7-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-8 for ONNX node: MMU-8
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8-1 for ONNX tensor: tensor-8-1
[09/07/2022-04:04:43] [TRT] [V] MMU-8 [MatMul] outputs: [tensor-8-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-8 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-8-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-8 [Add] inputs: [tensor-8-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-8 for ONNX node: AddU-8
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8-2 for ONNX tensor: tensor-8-2
[09/07/2022-04:04:43] [TRT] [V] AddU-8 [Add] outputs: [tensor-8-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-8 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-8-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-8 [Relu] inputs: [tensor-8-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-8 for ONNX node: ReLUU-8
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8-3 for ONNX tensor: tensor-8-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-8 [Relu] outputs: [tensor-8-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-8 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-8-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-8 [MatMul] inputs: [tensor-8-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-8 for ONNX node: MMD-8
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8-4 for ONNX tensor: tensor-8-4
[09/07/2022-04:04:43] [TRT] [V] MMD-8 [MatMul] outputs: [tensor-8-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-8 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-8-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-8 [Add] inputs: [tensor-8-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-8 for ONNX node: AddD-8
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8-5 for ONNX tensor: tensor-8-5
[09/07/2022-04:04:43] [TRT] [V] AddD-8 [Add] outputs: [tensor-8-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-8 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-8-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-8 [Relu] inputs: [tensor-8-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-8 for ONNX node: ReLUD-8
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8-6 for ONNX tensor: tensor-8-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-8 [Relu] outputs: [tensor-8-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMU-9 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-8-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:43] [TRT] [V] MMU-9 [MatMul] inputs: [tensor-8-6 -> (-1, -1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMU-9 for ONNX node: MMU-9
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-9-1 for ONNX tensor: tensor-9-1
[09/07/2022-04:04:43] [TRT] [V] MMU-9 [MatMul] outputs: [tensor-9-1 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddU-9 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-9-1
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:43] [TRT] [V] AddU-9 [Add] inputs: [tensor-9-1 -> (-1, -1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddU-9 for ONNX node: AddU-9
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-9-2 for ONNX tensor: tensor-9-2
[09/07/2022-04:04:43] [TRT] [V] AddU-9 [Add] outputs: [tensor-9-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUU-9 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-9-2
[09/07/2022-04:04:43] [TRT] [V] ReLUU-9 [Relu] inputs: [tensor-9-2 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUU-9 for ONNX node: ReLUU-9
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-9-3 for ONNX tensor: tensor-9-3
[09/07/2022-04:04:43] [TRT] [V] ReLUU-9 [Relu] outputs: [tensor-9-3 -> (-1, -1, 2048)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: MMD-9 [MatMul]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-9-3
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:43] [TRT] [V] MMD-9 [MatMul] inputs: [tensor-9-3 -> (-1, -1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: MMD-9 for ONNX node: MMD-9
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-9-4 for ONNX tensor: tensor-9-4
[09/07/2022-04:04:43] [TRT] [V] MMD-9 [MatMul] outputs: [tensor-9-4 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: AddD-9 [Add]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-9-4
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:43] [TRT] [V] AddD-9 [Add] inputs: [tensor-9-4 -> (-1, -1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: AddD-9 for ONNX node: AddD-9
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-9-5 for ONNX tensor: tensor-9-5
[09/07/2022-04:04:43] [TRT] [V] AddD-9 [Add] outputs: [tensor-9-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: ReLUD-9 [Relu]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-9-5
[09/07/2022-04:04:43] [TRT] [V] ReLUD-9 [Relu] inputs: [tensor-9-5 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: ReLUD-9 for ONNX node: ReLUD-9
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-9-6 for ONNX tensor: tensor-9-6
[09/07/2022-04:04:43] [TRT] [V] ReLUD-9 [Relu] outputs: [tensor-9-6 -> (-1, -1, 256)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Parsing node: Reduce [ReduceSum]
[09/07/2022-04:04:43] [TRT] [V] Searching for input: tensor-9-6
[09/07/2022-04:04:43] [TRT] [V] Searching for input: constantM1
[09/07/2022-04:04:43] [TRT] [V] Reduce [ReduceSum] inputs: [tensor-9-6 -> (-1, -1, 256)[FLOAT]], [constantM1 -> (1)[INT32]], 
[09/07/2022-04:04:43] [TRT] [V] Registering layer: Reduce for ONNX node: Reduce
[09/07/2022-04:04:43] [TRT] [V] Registering tensor: tensor-8_0 for ONNX tensor: tensor-8
[09/07/2022-04:04:43] [TRT] [V] Reduce [ReduceSum] outputs: [tensor-8 -> (-1, -1)[FLOAT]], 
[09/07/2022-04:04:43] [TRT] [V] Marking tensor-8_0 as output: tensor-8
[09/07/2022-04:04:43] [TRT] [V] Applying generic optimizations to the graph for inference.
[09/07/2022-04:04:43] [TRT] [V] Original: 108 layers
[09/07/2022-04:04:43] [TRT] [V] After dead-layer removal: 108 layers
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant1x256
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant1x256 with (Unnamed Layer* 1) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] After Myelin optimization: 107 layers
[09/07/2022-04:04:43] [TRT] [V] Running: MatMulToConvTransform on MMU0
[09/07/2022-04:04:43] [TRT] [V] Convert layer type of MMU0 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:43] [TRT] [V] Applying ScaleNodes fusions.
[09/07/2022-04:04:43] [TRT] [V] After scale fusion: 108 layers
[09/07/2022-04:04:43] [TRT] [V] Running: ConstantSplit on constant256x2048
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048 with (Unnamed Layer* 4) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_1
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_1 with (Unnamed Layer* 17) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_2
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_2 with (Unnamed Layer* 27) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_3
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_3 with (Unnamed Layer* 37) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_4
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_4 with (Unnamed Layer* 47) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_5
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_5 with (Unnamed Layer* 57) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_6
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_6 with (Unnamed Layer* 67) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_7
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_7 with (Unnamed Layer* 77) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_8
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_8 with (Unnamed Layer* 87) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256x2048_clone_9
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256x2048_clone_9 with (Unnamed Layer* 97) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstantSplit on constant2048
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048 with (Unnamed Layer* 7) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_1
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_1 with (Unnamed Layer* 19) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_2
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_2 with (Unnamed Layer* 29) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_3
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_3 with (Unnamed Layer* 39) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_4
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_4 with (Unnamed Layer* 49) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_5
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_5 with (Unnamed Layer* 59) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_6
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_6 with (Unnamed Layer* 69) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_7
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_7 with (Unnamed Layer* 79) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_8
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_8 with (Unnamed Layer* 89) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_9
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_9 with (Unnamed Layer* 99) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-0
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-0 with ReLUU-0
[09/07/2022-04:04:43] [TRT] [V] Running: ConstantSplit on constant2048x256
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256 with (Unnamed Layer* 11) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_1
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_1 with (Unnamed Layer* 22) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_2
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_2 with (Unnamed Layer* 32) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_3
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_3 with (Unnamed Layer* 42) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_4
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_4 with (Unnamed Layer* 52) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_5
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_5 with (Unnamed Layer* 62) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_6
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_6 with (Unnamed Layer* 72) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_7
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_7 with (Unnamed Layer* 82) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_8
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_8 with (Unnamed Layer* 92) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant2048x256_clone_9
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant2048x256_clone_9 with (Unnamed Layer* 102) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstantSplit on constant256
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256 with (Unnamed Layer* 14) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_1
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_1 with (Unnamed Layer* 24) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_2
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_2 with (Unnamed Layer* 34) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_3
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_3 with (Unnamed Layer* 44) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_4
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_4 with (Unnamed Layer* 54) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_5
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_5 with (Unnamed Layer* 64) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_6
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_6 with (Unnamed Layer* 74) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_7
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_7 with (Unnamed Layer* 84) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_8
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_8 with (Unnamed Layer* 94) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_9
[09/07/2022-04:04:43] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_9 with (Unnamed Layer* 104) [Shuffle]
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-0
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-0 with ReLUD-0
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-1
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-1 with ReLUU-1
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-1
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-1 with ReLUD-1
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-2
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-2 with ReLUU-2
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-2
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-2 with ReLUD-2
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-3
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-3 with ReLUU-3
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-3
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-3 with ReLUD-3
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-4
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-4 with ReLUU-4
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-4
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-4 with ReLUD-4
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-5
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-5 with ReLUU-5
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-5
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-5 with ReLUD-5
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-6
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-6 with ReLUU-6
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-6
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-6 with ReLUD-6
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-7
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-7 with ReLUU-7
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-7
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-7 with ReLUD-7
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-8
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-8 with ReLUU-8
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-8
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-8 with ReLUD-8
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddU-9
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddU-9 with ReLUU-9
[09/07/2022-04:04:43] [TRT] [V] Running: EltReluFusion on AddD-9
[09/07/2022-04:04:43] [TRT] [V] EltReluFusion: Fusing AddD-9 with ReLUD-9
[09/07/2022-04:04:43] [TRT] [V] After dupe layer removal: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After final dead-layer removal: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After tensor merging: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After vertical fusions: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After dupe layer removal: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After final dead-layer removal: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After tensor merging: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After slice removal: 84 layers
[09/07/2022-04:04:43] [TRT] [V] After concat removal: 84 layers
[09/07/2022-04:04:43] [TRT] [V] Trying to split Reshape and strided tensor
[09/07/2022-04:04:43] [TRT] [V] Graph construction and optimization completed in 0.0427373 seconds.
[09/07/2022-04:04:43] [TRT] [V] Using cublas as a tactic source
[09/07/2022-04:04:43] [TRT] [I] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +255, GPU +106, now: CPU 502, GPU 533 (MiB)
[09/07/2022-04:04:43] [TRT] [V] Using cuDNN as a tactic source
[09/07/2022-04:04:43] [TRT] [I] [MemUsageChange] Init cuDNN: CPU +114, GPU +46, now: CPU 616, GPU 579 (MiB)
[09/07/2022-04:04:43] [TRT] [I] Local timing cache in use. Profiling results in this builder pass will not be stored.
[09/07/2022-04:04:43] [TRT] [V] Constructing optimization profile number 0 [1/1].
[09/07/2022-04:04:43] [TRT] [V] Reserving memory for host IO tensors. Host: 0 bytes
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float((# 1 (SHAPE tensor-0)),1,1) -> Float(1,(# 0 (SHAPE tensor-0)),(# 0 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0 -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00256525
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.014244
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00253075
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00253075
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float((# 1 (SHAPE tensor-0)),1,1) -> Float((# 1 (SHAPE tensor-0)):32,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0 -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00284185
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0142102
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00285183
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003e8 Time: 0.00284185
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(1,1:32,1,1) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(reshape_before_MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00253568
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0263409
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00255373
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003e8 Time: 0.00253568
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(1,1:32,1,1) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.0980427
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0884907
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.098504
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.0884907
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(8,1:32,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.110947
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 4.60459
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.110917
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.110917
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.0939493
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0871173
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.092928
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.0871173
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(8,1:32,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.110637
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 4.58274
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.11096
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003e8 Time: 0.110637
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(8,1:32,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.109661
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 4.63701
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.109371
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.109371
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(8,1:32,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.114809
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.143019
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.114724
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.114724
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float(1,(* 256 (# 0 (SHAPE tensor-0))),(# 0 (SHAPE tensor-0))) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-1 -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.362496
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.189781
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.362155
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.189781
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-1 -> <out>) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.362496
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.191429
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.361472
[09/07/2022-04:04:43] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.191429
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:43] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:43] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(<in> -> tensor-0-1) (Reformat)
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003e8 Time: 4.57899
[09/07/2022-04:04:43] [TRT] [V] Tactic: 0x00000000000003ea Time: 1.41756
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 4.59401
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 1.41756
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(<in> -> (Unnamed Layer* 7) [Shuffle]_output) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.021186
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0282969
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0210773
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0210773
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0-1 -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 4.60356
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 1.40927
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 4.5783
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 1.40927
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0-1 -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 2.87676
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 1.45886
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 2.873
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 1.45886
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat((Unnamed Layer* 7) [Shuffle]_output -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.021392
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0263877
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.021064
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.021064
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat((Unnamed Layer* 7) [Shuffle]_output -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00891088
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0257534
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00926222
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003e8 Time: 0.00891088
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(<in> -> tensor-0-4) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.571051
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.195243
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.578901
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.195243
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(<in> -> (Unnamed Layer* 14) [Shuffle]_output) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00886007
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0254293
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0097792
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003e8 Time: 0.00886007
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0-4 -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.571733
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.192171
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.578901
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.192171
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat((Unnamed Layer* 14) [Shuffle]_output -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00935674
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0238933
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00902141
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00902141
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: Optimizer Reformat((Unnamed Layer* 14) [Shuffle]_output -> <out>) (Reformat)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00958842
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0235975
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00840933
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00840933
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048,2048,1) -> Float(2048:32,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(2048:32,2048,1) -> Float(2048,2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 2048 (# 1 (SHAPE tensor-0))):32,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256,256,1) -> Float(256:32,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float(256:32,256,1) -> Float(256,256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning Reformat: Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:44] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:44] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning format combination: Float((# 1 (SHAPE tensor-0)),1,1) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: reshape_before_MMU0 (Shuffle)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00548302
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0241234
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00548302
[09/07/2022-04:04:44] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning format combination: Float(1,(# 0 (SHAPE tensor-0)),(# 0 (SHAPE tensor-0))) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: reshape_before_MMU0 (Shuffle)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0039694
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0194513
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0039694
[09/07/2022-04:04:44] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning format combination: Float((# 1 (SHAPE tensor-0)):32,1,1) -> Float(1,1:32,1,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: reshape_before_MMU0 (Shuffle)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0118628
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.039936
[09/07/2022-04:04:44] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0118628
[09/07/2022-04:04:44] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:44] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:44] [TRT] [V] *************** Autotuning format combination: Float(1,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: MMU0 (CudaDepthwiseConvolution)
[09/07/2022-04:04:44] [TRT] [V] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: MMU0 (FusedConvActConvolution)
[09/07/2022-04:04:44] [TRT] [V] FusedConvActConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:44] [TRT] [V] --------------- Timing Runner: MMU0 (CudnnConvolution)
[09/07/2022-04:04:44] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0866987
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.087656
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000002 Time: 0.0854187
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000004 Time: 23.5179
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000005 Time: 3.03831
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000002 Time: 0.0854187
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: MMU0 (CublasConvolution)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0413084
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0405807
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0405807
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: MMU0 (CaskConvolution)
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v1 Tactic: 0x0ebe499388e08286
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0ebe499388e08286 Time: 0.353621
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v0 Tactic: 0x1792ed6b0f1ea883
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x1792ed6b0f1ea883 Time: 0.161906
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v1 Tactic: 0x3e787008e11a6129
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x3e787008e11a6129 Time: 0.389461
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v1 Tactic: 0x474c9edd1ecfbbba
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x474c9edd1ecfbbba Time: 0.382635
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v0 Tactic: 0x4963fb96b4067e81
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x4963fb96b4067e81 Time: 0.398677
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v1 Tactic: 0x49ecad9da64c487b
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x49ecad9da64c487b Time: 0.39936
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v0 Tactic: 0x4c5584586319b832
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x4c5584586319b832 Time: 0.390485
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v1 Tactic: 0x5c38385751ccb068
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x5c38385751ccb068 Time: 0.356352
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v0 Tactic: 0x632674f65e3422ae
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x632674f65e3422ae Time: 0.164068
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v0 Tactic: 0x8d563cb6e2bd3e46
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x8d563cb6e2bd3e46 Time: 0.417109
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v1 Tactic: 0xa4bca1d50cb9f7ec
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xa4bca1d50cb9f7ec Time: 0.381749
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v0 Tactic: 0xbd90052d8b47dde9
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xbd90052d8b47dde9 Time: 0.164523
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v1 Tactic: 0xd00838485d937dc1
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xd00838485d937dc1 Time: 0.371371
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v0 Tactic: 0xef1674e9526bef07
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xef1674e9526bef07 Time: 0.390827
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v0 Tactic: 0xf462d2631d68e4d5
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xf462d2631d68e4d5 Time: 0.388779
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v1 Tactic: 0xfa4db728b7a121ee
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xfa4db728b7a121ee Time: 0.389803
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v0 Tactic: 0xfac2e123a5eb1714
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xfac2e123a5eb1714 Time: 0.389803
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xff7bc8e660bee75d
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xff7bc8e660bee75d Time: 0.381952
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x1792ed6b0f1ea883 Time: 0.161906
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CublasConvolution Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(1,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: MMU0 (CublasConvolution)
[09/07/2022-04:04:45] [TRT] [V] CublasConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: MMU0 (CaskConvolution)
[09/07/2022-04:04:45] [TRT] [V] MMU0 Set Tactic Name: sm50_xmma_conv_fprop_generic_f32f32_f32_f32_nchwkcrs_nchw Tactic: 0xc9f2c7cbb5759197
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0xc9f2c7cbb5759197 Time: 10000
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0xc9f2c7cbb5759197 Time: 10000
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0xc9f2c7cbb5759197
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: reshape_after_MMU0 (Shuffle)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0874667
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.172016
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0874667
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(1,(* 256 (# 0 (SHAPE tensor-0))),(# 0 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: reshape_after_MMU0 (Shuffle)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.267435
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.271952
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.267435
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(8,1:32,1,1) -> Float((* 256 (# 1 (SHAPE tensor-0))):32,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: reshape_after_MMU0 (Shuffle)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.265557
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 4.84489
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.265557
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: MMU-0 (MatrixMultiply)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000000 Time: 1.51089
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 1.51089
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: MatrixMultiply Tactic: 0x0000000000000000
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(2048,2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-0 + ReLUU-0 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.670379
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.670379
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-0 + ReLUU-0 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.882688
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.882688
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(524288,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: MMD-0 (MatrixMultiply)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000000 Time: 1.34554
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 1.34554
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: MatrixMultiply Tactic: 0x0000000000000000
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination:  -> Float(256,256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-0 + ReLUD-0 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.086208
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.086208
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-0 + ReLUD-0 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.114005
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.114005
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-1 + ReLUU-1 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.671744
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.671744
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-1 + ReLUU-1 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.892928
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.892928
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-1 + ReLUD-1 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0857787
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0857787
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-1 + ReLUD-1 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.112526
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.112526
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-2 + ReLUU-2 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.681984
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.681984
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-2 + ReLUU-2 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.882688
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.882688
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-2 + ReLUD-2 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0861893
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0861893
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-2 + ReLUD-2 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.112683
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.112683
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-3 + ReLUU-3 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.771755
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.771755
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-3 + ReLUU-3 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.963243
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.963243
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-3 + ReLUD-3 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0862533
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0862533
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-3 + ReLUD-3 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.114539
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.114539
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-4 + ReLUU-4 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.670379
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.670379
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-4 + ReLUU-4 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.892928
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.892928
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-4 + ReLUD-4 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0867467
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0867467
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-4 + ReLUD-4 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.114119
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.114119
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-5 + ReLUU-5 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.670379
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.670379
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-5 + ReLUU-5 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.892928
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.892928
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-5 + ReLUD-5 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0868693
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0868693
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-5 + ReLUD-5 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.114044
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.114044
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-6 + ReLUU-6 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.671744
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.671744
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-6 + ReLUU-6 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 1.00318
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 1.00318
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-6 + ReLUD-6 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.088368
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.088368
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-6 + ReLUD-6 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.115079
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.115079
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-7 + ReLUU-7 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.673707
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.673707
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-7 + ReLUU-7 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.899755
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.899755
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-7 + ReLUD-7 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0861013
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0861013
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-7 + ReLUD-7 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.115029
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.115029
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-8 + ReLUU-8 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.674133
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.674133
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-8 + ReLUU-8 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.899755
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.899755
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-8 + ReLUD-8 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0865093
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0865093
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-8 + ReLUD-8 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.114976
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.114976
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1), Float(524288,2048,1) -> Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,2048,1), Float(2048,2048,1) -> Float(E0,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-9 + ReLUU-9 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.679253
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.679253
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,2048,1), Float(2048:32,2048,1) -> Float(E0:32,2048,1) where E0=(* 2048 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddU-9 + ReLUU-9 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.899413
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.899413
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 2048 (# 1 (SHAPE tensor-0))),2048,1), Float(524288,256,1) -> Float((* 256 (# 1 (SHAPE tensor-0))),256,1) ***************
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0,256,1), Float(256,256,1) -> Float(E0,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-9 + ReLUD-9 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0863867
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.0863867
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float(E0:32,256,1), Float(256:32,256,1) -> Float(E0:32,256,1) where E0=(* 256 (# 1 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: AddD-9 + ReLUD-9 (ElementWise)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.114802
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 0.114802
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: ElementWise Tactic: 0x0000000000000001
[09/07/2022-04:04:45] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:45] [TRT] [V] *************** Autotuning format combination: Float((* 256 (# 1 (SHAPE tensor-0))),256,1) -> Float((# 1 (SHAPE tensor-0)),1) ***************
[09/07/2022-04:04:45] [TRT] [V] --------------- Timing Runner: Reduce (Reduce)
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.326144
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000002 Time: 0.0412527
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000003 Time: 0.0935573
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000004 Time: 0.0931627
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000007 Time: 0.0900267
[09/07/2022-04:04:45] [TRT] [V] Tactic: 0x0000000000000008 Time: 0.0895147
[09/07/2022-04:04:45] [TRT] [V] Fastest Tactic: 0x0000000000000002 Time: 0.0412527
[09/07/2022-04:04:45] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Reduce Tactic: 0x0000000000000002
[09/07/2022-04:04:45] [TRT] [V] Formats and tactics selection completed in 1.85614 seconds.
[09/07/2022-04:04:45] [TRT] [V] After reformat layers: 84 layers
[09/07/2022-04:04:45] [TRT] [V] Pre-optimized block assignment.
[09/07/2022-04:04:45] [TRT] [V] Block size 4
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 4
[09/07/2022-04:04:45] [TRT] [V] Block size 8388608
[09/07/2022-04:04:45] [TRT] [V] Block size 23622320128
[09/07/2022-04:04:45] [TRT] [V] Total Activation Memory: 25140658184
[09/07/2022-04:04:45] [TRT] [I] Detected 1 inputs and 1 output network tensors.
[09/07/2022-04:04:45] [TRT] [V] Layer: reshape_before_MMU0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: reshape_after_MMU0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048 + (Unnamed Layer* 4) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_1 + (Unnamed Layer* 17) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_2 + (Unnamed Layer* 27) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_3 + (Unnamed Layer* 37) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_4 + (Unnamed Layer* 47) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_5 + (Unnamed Layer* 57) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_6 + (Unnamed Layer* 67) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_7 + (Unnamed Layer* 77) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_8 + (Unnamed Layer* 87) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256x2048_clone_9 + (Unnamed Layer* 97) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-0 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048 + (Unnamed Layer* 7) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_1 + (Unnamed Layer* 19) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_2 + (Unnamed Layer* 29) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_3 + (Unnamed Layer* 39) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_4 + (Unnamed Layer* 49) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_5 + (Unnamed Layer* 59) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_6 + (Unnamed Layer* 69) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_7 + (Unnamed Layer* 79) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_8 + (Unnamed Layer* 89) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048_clone_9 + (Unnamed Layer* 99) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-0 + ReLUU-0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256 + (Unnamed Layer* 11) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_1 + (Unnamed Layer* 22) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_2 + (Unnamed Layer* 32) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_3 + (Unnamed Layer* 42) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_4 + (Unnamed Layer* 52) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_5 + (Unnamed Layer* 62) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_6 + (Unnamed Layer* 72) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_7 + (Unnamed Layer* 82) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_8 + (Unnamed Layer* 92) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant2048x256_clone_9 + (Unnamed Layer* 102) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-0 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256 + (Unnamed Layer* 14) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_1 + (Unnamed Layer* 24) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_2 + (Unnamed Layer* 34) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_3 + (Unnamed Layer* 44) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_5 + (Unnamed Layer* 64) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_6 + (Unnamed Layer* 74) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_7 + (Unnamed Layer* 84) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_8 + (Unnamed Layer* 94) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: constant256_clone_9 + (Unnamed Layer* 104) [Shuffle] Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-0 + ReLUD-0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-1 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-1 + ReLUU-1 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-1 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-1 + ReLUD-1 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-2 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-2 + ReLUU-2 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-2 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-2 + ReLUD-2 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-3 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-3 + ReLUU-3 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-3 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-3 + ReLUD-3 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-4 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-4 + ReLUU-4 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-4 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-4 + ReLUD-4 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-5 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-5 + ReLUU-5 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-5 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-5 + ReLUD-5 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-6 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-6 + ReLUU-6 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-6 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-6 + ReLUD-6 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-7 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-7 + ReLUU-7 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-7 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-7 + ReLUD-7 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-8 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-8 + ReLUU-8 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-8 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-8 + ReLUD-8 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMU-9 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddU-9 + ReLUU-9 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: MMD-9 Host Persistent: 204 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: AddD-9 + ReLUD-9 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [V] Layer: Reduce Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [I] Total Host Persistent Memory: 4160
[09/07/2022-04:04:45] [TRT] [I] Total Device Persistent Memory: 0
[09/07/2022-04:04:45] [TRT] [I] Total Scratch Memory: 0
[09/07/2022-04:04:45] [TRT] [I] [MemUsageStats] Peak memory usage of TRT CPU/GPU memory allocators: CPU 2 MiB, GPU 4617 MiB
[09/07/2022-04:04:45] [TRT] [I] [BlockAssignment] Algorithm ShiftNTopDown took 0.435907ms to assign 3 blocks to 43 nodes requiring 134217732 bytes.
[09/07/2022-04:04:45] [TRT] [V] Optimized block assignment.
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 67108864
[09/07/2022-04:04:45] [TRT] [V] Block size 4
[09/07/2022-04:04:45] [TRT] [I] Total Activation Memory: 134217732
[09/07/2022-04:04:45] [TRT] [V] Disabling unused tactic source: CUDNN
[09/07/2022-04:04:45] [TRT] [V] Disabling unused tactic source: EDGE_MASK_CONVOLUTIONS
[09/07/2022-04:04:45] [TRT] [V] Using cublas as a tactic source
[09/07/2022-04:04:45] [TRT] [I] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +8, now: CPU 916, GPU 711 (MiB)
[09/07/2022-04:04:45] [TRT] [V] Engine generation completed in 2.22617 seconds.
[09/07/2022-04:04:45] [TRT] [V] Deleting timing cache: 32 entries, served 148 hits since creation.
[09/07/2022-04:04:45] [TRT] [V] Engine Layer Information:
Layer(NoOp): reshape_before_MMU0, Tactic: 0x0000000000000000, tensor-0[Float(-7,-8,1)] -> reshape_before_MMU0_out_region[Float(-14,1,1,1)]
Layer(CublasConvolution): MMU0, Tactic: 0x0000000000000001, reshape_before_MMU0_out_region[Float(-14,1,1,1)] -> MMU0_out_region[Float(-14,256,1,1)]
Layer(NoOp): reshape_after_MMU0, Tactic: 0x0000000000000000, MMU0_out_region[Float(-14,256,1,1)] -> tensor-1[Float(-7,-8,256)]
Layer(Constant): constant256x2048 + (Unnamed Layer* 4) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 4) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_1 + (Unnamed Layer* 17) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 17) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_2 + (Unnamed Layer* 27) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 27) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_3 + (Unnamed Layer* 37) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 37) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_4 + (Unnamed Layer* 47) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 47) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_5 + (Unnamed Layer* 57) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 57) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_6 + (Unnamed Layer* 67) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 67) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_7 + (Unnamed Layer* 77) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 77) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_8 + (Unnamed Layer* 87) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 87) [Shuffle]_output[Float(1,256,2048)]
Layer(Constant): constant256x2048_clone_9 + (Unnamed Layer* 97) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 97) [Shuffle]_output[Float(1,256,2048)]
Layer(MatrixMultiply): MMU-0, Tactic: 0x0000000000000000, tensor-1[Float(-7,-8,256)], (Unnamed Layer* 4) [Shuffle]_output[Float(1,256,2048)] -> tensor-0-1[Float(-7,-8,2048)]
Layer(Constant): constant2048 + (Unnamed Layer* 7) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 7) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_1 + (Unnamed Layer* 19) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 19) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_2 + (Unnamed Layer* 29) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 29) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_3 + (Unnamed Layer* 39) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 39) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_4 + (Unnamed Layer* 49) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 49) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_5 + (Unnamed Layer* 59) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 59) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_6 + (Unnamed Layer* 69) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 69) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_7 + (Unnamed Layer* 79) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 79) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_8 + (Unnamed Layer* 89) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 89) [Shuffle]_output[Float(1,1,2048)]
Layer(Constant): constant2048_clone_9 + (Unnamed Layer* 99) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 99) [Shuffle]_output[Float(1,1,2048)]
Layer(ElementWise): AddU-0 + ReLUU-0, Tactic: 0x0000000000000001, tensor-0-1[Float(-7,-8,2048)], (Unnamed Layer* 7) [Shuffle]_output[Float(1,1,2048)] -> tensor-0-3[Float(-7,-8,2048)]
Layer(Constant): constant2048x256 + (Unnamed Layer* 11) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 11) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_1 + (Unnamed Layer* 22) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 22) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_2 + (Unnamed Layer* 32) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 32) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_3 + (Unnamed Layer* 42) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 42) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_4 + (Unnamed Layer* 52) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 52) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_5 + (Unnamed Layer* 62) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 62) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_6 + (Unnamed Layer* 72) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 72) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_7 + (Unnamed Layer* 82) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 82) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_8 + (Unnamed Layer* 92) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 92) [Shuffle]_output[Float(1,2048,256)]
Layer(Constant): constant2048x256_clone_9 + (Unnamed Layer* 102) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 102) [Shuffle]_output[Float(1,2048,256)]
Layer(MatrixMultiply): MMD-0, Tactic: 0x0000000000000000, tensor-0-3[Float(-7,-8,2048)], (Unnamed Layer* 11) [Shuffle]_output[Float(1,2048,256)] -> tensor-0-4[Float(-7,-8,256)]
Layer(Constant): constant256 + (Unnamed Layer* 14) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 14) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_1 + (Unnamed Layer* 24) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 24) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_2 + (Unnamed Layer* 34) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 34) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_3 + (Unnamed Layer* 44) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 44) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_4 + (Unnamed Layer* 54) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 54) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_5 + (Unnamed Layer* 64) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 64) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_6 + (Unnamed Layer* 74) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 74) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_7 + (Unnamed Layer* 84) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 84) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_8 + (Unnamed Layer* 94) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 94) [Shuffle]_output[Float(1,1,256)]
Layer(Constant): constant256_clone_9 + (Unnamed Layer* 104) [Shuffle], Tactic: 0x0000000000000000,  -> (Unnamed Layer* 104) [Shuffle]_output[Float(1,1,256)]
Layer(ElementWise): AddD-0 + ReLUD-0, Tactic: 0x0000000000000001, tensor-0-4[Float(-7,-8,256)], (Unnamed Layer* 14) [Shuffle]_output[Float(1,1,256)] -> tensor-0-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-1, Tactic: 0x0000000000000000, tensor-0-6[Float(-7,-8,256)], (Unnamed Layer* 17) [Shuffle]_output[Float(1,256,2048)] -> tensor-1-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-1 + ReLUU-1, Tactic: 0x0000000000000001, tensor-1-1[Float(-7,-8,2048)], (Unnamed Layer* 19) [Shuffle]_output[Float(1,1,2048)] -> tensor-1-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-1, Tactic: 0x0000000000000000, tensor-1-3[Float(-7,-8,2048)], (Unnamed Layer* 22) [Shuffle]_output[Float(1,2048,256)] -> tensor-1-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-1 + ReLUD-1, Tactic: 0x0000000000000001, tensor-1-4[Float(-7,-8,256)], (Unnamed Layer* 24) [Shuffle]_output[Float(1,1,256)] -> tensor-1-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-2, Tactic: 0x0000000000000000, tensor-1-6[Float(-7,-8,256)], (Unnamed Layer* 27) [Shuffle]_output[Float(1,256,2048)] -> tensor-2-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-2 + ReLUU-2, Tactic: 0x0000000000000001, tensor-2-1[Float(-7,-8,2048)], (Unnamed Layer* 29) [Shuffle]_output[Float(1,1,2048)] -> tensor-2-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-2, Tactic: 0x0000000000000000, tensor-2-3[Float(-7,-8,2048)], (Unnamed Layer* 32) [Shuffle]_output[Float(1,2048,256)] -> tensor-2-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-2 + ReLUD-2, Tactic: 0x0000000000000001, tensor-2-4[Float(-7,-8,256)], (Unnamed Layer* 34) [Shuffle]_output[Float(1,1,256)] -> tensor-2-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-3, Tactic: 0x0000000000000000, tensor-2-6[Float(-7,-8,256)], (Unnamed Layer* 37) [Shuffle]_output[Float(1,256,2048)] -> tensor-3-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-3 + ReLUU-3, Tactic: 0x0000000000000001, tensor-3-1[Float(-7,-8,2048)], (Unnamed Layer* 39) [Shuffle]_output[Float(1,1,2048)] -> tensor-3-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-3, Tactic: 0x0000000000000000, tensor-3-3[Float(-7,-8,2048)], (Unnamed Layer* 42) [Shuffle]_output[Float(1,2048,256)] -> tensor-3-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-3 + ReLUD-3, Tactic: 0x0000000000000001, tensor-3-4[Float(-7,-8,256)], (Unnamed Layer* 44) [Shuffle]_output[Float(1,1,256)] -> tensor-3-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-4, Tactic: 0x0000000000000000, tensor-3-6[Float(-7,-8,256)], (Unnamed Layer* 47) [Shuffle]_output[Float(1,256,2048)] -> tensor-4-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-4 + ReLUU-4, Tactic: 0x0000000000000001, tensor-4-1[Float(-7,-8,2048)], (Unnamed Layer* 49) [Shuffle]_output[Float(1,1,2048)] -> tensor-4-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-4, Tactic: 0x0000000000000000, tensor-4-3[Float(-7,-8,2048)], (Unnamed Layer* 52) [Shuffle]_output[Float(1,2048,256)] -> tensor-4-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-4 + ReLUD-4, Tactic: 0x0000000000000001, tensor-4-4[Float(-7,-8,256)], (Unnamed Layer* 54) [Shuffle]_output[Float(1,1,256)] -> tensor-4-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-5, Tactic: 0x0000000000000000, tensor-4-6[Float(-7,-8,256)], (Unnamed Layer* 57) [Shuffle]_output[Float(1,256,2048)] -> tensor-5-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-5 + ReLUU-5, Tactic: 0x0000000000000001, tensor-5-1[Float(-7,-8,2048)], (Unnamed Layer* 59) [Shuffle]_output[Float(1,1,2048)] -> tensor-5-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-5, Tactic: 0x0000000000000000, tensor-5-3[Float(-7,-8,2048)], (Unnamed Layer* 62) [Shuffle]_output[Float(1,2048,256)] -> tensor-5-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-5 + ReLUD-5, Tactic: 0x0000000000000001, tensor-5-4[Float(-7,-8,256)], (Unnamed Layer* 64) [Shuffle]_output[Float(1,1,256)] -> tensor-5-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-6, Tactic: 0x0000000000000000, tensor-5-6[Float(-7,-8,256)], (Unnamed Layer* 67) [Shuffle]_output[Float(1,256,2048)] -> tensor-6-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-6 + ReLUU-6, Tactic: 0x0000000000000001, tensor-6-1[Float(-7,-8,2048)], (Unnamed Layer* 69) [Shuffle]_output[Float(1,1,2048)] -> tensor-6-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-6, Tactic: 0x0000000000000000, tensor-6-3[Float(-7,-8,2048)], (Unnamed Layer* 72) [Shuffle]_output[Float(1,2048,256)] -> tensor-6-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-6 + ReLUD-6, Tactic: 0x0000000000000001, tensor-6-4[Float(-7,-8,256)], (Unnamed Layer* 74) [Shuffle]_output[Float(1,1,256)] -> tensor-6-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-7, Tactic: 0x0000000000000000, tensor-6-6[Float(-7,-8,256)], (Unnamed Layer* 77) [Shuffle]_output[Float(1,256,2048)] -> tensor-7-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-7 + ReLUU-7, Tactic: 0x0000000000000001, tensor-7-1[Float(-7,-8,2048)], (Unnamed Layer* 79) [Shuffle]_output[Float(1,1,2048)] -> tensor-7-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-7, Tactic: 0x0000000000000000, tensor-7-3[Float(-7,-8,2048)], (Unnamed Layer* 82) [Shuffle]_output[Float(1,2048,256)] -> tensor-7-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-7 + ReLUD-7, Tactic: 0x0000000000000001, tensor-7-4[Float(-7,-8,256)], (Unnamed Layer* 84) [Shuffle]_output[Float(1,1,256)] -> tensor-7-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-8, Tactic: 0x0000000000000000, tensor-7-6[Float(-7,-8,256)], (Unnamed Layer* 87) [Shuffle]_output[Float(1,256,2048)] -> tensor-8-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-8 + ReLUU-8, Tactic: 0x0000000000000001, tensor-8-1[Float(-7,-8,2048)], (Unnamed Layer* 89) [Shuffle]_output[Float(1,1,2048)] -> tensor-8-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-8, Tactic: 0x0000000000000000, tensor-8-3[Float(-7,-8,2048)], (Unnamed Layer* 92) [Shuffle]_output[Float(1,2048,256)] -> tensor-8-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-8 + ReLUD-8, Tactic: 0x0000000000000001, tensor-8-4[Float(-7,-8,256)], (Unnamed Layer* 94) [Shuffle]_output[Float(1,1,256)] -> tensor-8-6[Float(-7,-8,256)]
Layer(MatrixMultiply): MMU-9, Tactic: 0x0000000000000000, tensor-8-6[Float(-7,-8,256)], (Unnamed Layer* 97) [Shuffle]_output[Float(1,256,2048)] -> tensor-9-1[Float(-7,-8,2048)]
Layer(ElementWise): AddU-9 + ReLUU-9, Tactic: 0x0000000000000001, tensor-9-1[Float(-7,-8,2048)], (Unnamed Layer* 99) [Shuffle]_output[Float(1,1,2048)] -> tensor-9-3[Float(-7,-8,2048)]
Layer(MatrixMultiply): MMD-9, Tactic: 0x0000000000000000, tensor-9-3[Float(-7,-8,2048)], (Unnamed Layer* 102) [Shuffle]_output[Float(1,2048,256)] -> tensor-9-4[Float(-7,-8,256)]
Layer(ElementWise): AddD-9 + ReLUD-9, Tactic: 0x0000000000000001, tensor-9-4[Float(-7,-8,256)], (Unnamed Layer* 104) [Shuffle]_output[Float(1,1,256)] -> tensor-9-6[Float(-7,-8,256)]
Layer(Reduce): Reduce, Tactic: 0x0000000000000002, tensor-9-6[Float(-7,-8,256)] -> tensor-8[Float(-7,-8)]
[09/07/2022-04:04:45] [TRT] [I] [MemUsageChange] TensorRT-managed allocation in building engine: CPU +0, GPU +5, now: CPU 0, GPU 5 (MiB)
[09/07/2022-04:04:45] [TRT] [W] The getMaxBatchSize() function should not be used with an engine built from a network created with NetworkDefinitionCreationFlag::kEXPLICIT_BATCH flag. This function will always return 1.
[09/07/2022-04:04:45] [TRT] [W] The getMaxBatchSize() function should not be used with an engine built from a network created with NetworkDefinitionCreationFlag::kEXPLICIT_BATCH flag. This function will always return 1.
&&&& RUNNING TensorRT.trtexec [TensorRT v8401] # trtexec --loadEngine=model-3D.plan --verbose --useCudaGraph --noDataTransfers --shapes=tensor-0:32x256x1
[09/07/2022-04:04:45] [I] === Model Options ===
[09/07/2022-04:04:45] [I] Format: *
[09/07/2022-04:04:45] [I] Model: 
[09/07/2022-04:04:45] [I] Output:
[09/07/2022-04:04:45] [I] === Build Options ===
[09/07/2022-04:04:45] [I] Max batch: explicit batch
[09/07/2022-04:04:45] [I] Memory Pools: workspace: default, dlaSRAM: default, dlaLocalDRAM: default, dlaGlobalDRAM: default
[09/07/2022-04:04:45] [I] minTiming: 1
[09/07/2022-04:04:45] [I] avgTiming: 8
[09/07/2022-04:04:45] [I] Precision: FP32
[09/07/2022-04:04:45] [I] LayerPrecisions: 
[09/07/2022-04:04:45] [I] Calibration: 
[09/07/2022-04:04:45] [I] Refit: Disabled
[09/07/2022-04:04:45] [I] Sparsity: Disabled
[09/07/2022-04:04:45] [I] Safe mode: Disabled
[09/07/2022-04:04:45] [I] DirectIO mode: Disabled
[09/07/2022-04:04:45] [I] Restricted mode: Disabled
[09/07/2022-04:04:45] [I] Build only: Disabled
[09/07/2022-04:04:45] [I] Save engine: 
[09/07/2022-04:04:45] [I] Load engine: model-3D.plan
[09/07/2022-04:04:45] [I] Profiling verbosity: 0
[09/07/2022-04:04:45] [I] Tactic sources: Using default tactic sources
[09/07/2022-04:04:45] [I] timingCacheMode: local
[09/07/2022-04:04:45] [I] timingCacheFile: 
[09/07/2022-04:04:45] [I] Input(s)s format: fp32:CHW
[09/07/2022-04:04:45] [I] Output(s)s format: fp32:CHW
[09/07/2022-04:04:45] [I] Input build shape: tensor-0=32x256x1+32x256x1+32x256x1
[09/07/2022-04:04:45] [I] Input calibration shapes: model
[09/07/2022-04:04:45] [I] === System Options ===
[09/07/2022-04:04:45] [I] Device: 0
[09/07/2022-04:04:45] [I] DLACore: 
[09/07/2022-04:04:45] [I] Plugins:
[09/07/2022-04:04:45] [I] === Inference Options ===
[09/07/2022-04:04:45] [I] Batch: Explicit
[09/07/2022-04:04:45] [I] Input inference shape: tensor-0=32x256x1
[09/07/2022-04:04:45] [I] Iterations: 10
[09/07/2022-04:04:45] [I] Duration: 3s (+ 200ms warm up)
[09/07/2022-04:04:45] [I] Sleep time: 0ms
[09/07/2022-04:04:45] [I] Idle time: 0ms
[09/07/2022-04:04:45] [I] Streams: 1
[09/07/2022-04:04:45] [I] ExposeDMA: Disabled
[09/07/2022-04:04:45] [I] Data transfers: Disabled
[09/07/2022-04:04:45] [I] Spin-wait: Disabled
[09/07/2022-04:04:45] [I] Multithreading: Disabled
[09/07/2022-04:04:45] [I] CUDA Graph: Enabled
[09/07/2022-04:04:45] [I] Separate profiling: Disabled
[09/07/2022-04:04:45] [I] Time Deserialize: Disabled
[09/07/2022-04:04:45] [I] Time Refit: Disabled
[09/07/2022-04:04:45] [I] Inputs:
[09/07/2022-04:04:45] [I] === Reporting Options ===
[09/07/2022-04:04:45] [I] Verbose: Enabled
[09/07/2022-04:04:45] [I] Averages: 10 inferences
[09/07/2022-04:04:45] [I] Percentile: 99
[09/07/2022-04:04:45] [I] Dump refittable layers:Disabled
[09/07/2022-04:04:45] [I] Dump output: Disabled
[09/07/2022-04:04:45] [I] Profile: Disabled
[09/07/2022-04:04:45] [I] Export timing to JSON file: 
[09/07/2022-04:04:45] [I] Export output to JSON file: 
[09/07/2022-04:04:45] [I] Export profile to JSON file: 
[09/07/2022-04:04:45] [I] 
[09/07/2022-04:04:45] [I] === Device Information ===
[09/07/2022-04:04:45] [I] Selected Device: NVIDIA GeForce GTX 1070
[09/07/2022-04:04:45] [I] Compute Capability: 6.1
[09/07/2022-04:04:45] [I] SMs: 16
[09/07/2022-04:04:45] [I] Compute Clock Rate: 1.645 GHz
[09/07/2022-04:04:45] [I] Device Global Memory: 8111 MiB
[09/07/2022-04:04:45] [I] Shared Memory per SM: 96 KiB
[09/07/2022-04:04:45] [I] Memory Bus Width: 256 bits (ECC disabled)
[09/07/2022-04:04:45] [I] Memory Clock Rate: 4.004 GHz
[09/07/2022-04:04:45] [I] 
[09/07/2022-04:04:45] [I] TensorRT version: 8.4.1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::BatchTilePlugin_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::BatchedNMS_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::BatchedNMSDynamic_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::CoordConvAC version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::CropAndResize version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::CropAndResizeDynamic version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::DecodeBbox3DPlugin version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::DetectionLayer_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::EfficientNMS_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::EfficientNMS_ONNX_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::EfficientNMS_Explicit_TF_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::EfficientNMS_Implicit_TF_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::FlattenConcat_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::GenerateDetection_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::GridAnchor_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::GridAnchorRect_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::InstanceNormalization_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::LReLU_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::MultilevelCropAndResize_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::MultilevelProposeROI_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::MultiscaleDeformableAttnPlugin_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::NMS_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::NMSDynamic_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::Normalize_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::PillarScatterPlugin version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::PriorBox_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::ProposalLayer_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::Proposal version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::ProposalDynamic version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::PyramidROIAlign_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::Region_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::Reorg_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::ResizeNearest_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::RPROI_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::ScatterND version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::SpecialSlice_TRT version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::Split version 1
[09/07/2022-04:04:45] [V] [TRT] Registered plugin creator - ::VoxelGeneratorPlugin version 1
[09/07/2022-04:04:45] [I] Engine loaded in 0.00303679 sec.
[09/07/2022-04:04:45] [I] [TRT] [MemUsageChange] Init CUDA: CPU +195, GPU +0, now: CPU 207, GPU 846 (MiB)
[09/07/2022-04:04:46] [I] [TRT] Loaded engine size: 4 MiB
[09/07/2022-04:04:46] [V] [TRT] Using cublas as a tactic source
[09/07/2022-04:04:46] [I] [TRT] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +255, GPU +106, now: CPU 481, GPU 958 (MiB)
[09/07/2022-04:04:46] [V] [TRT] Deserialization required 208838 microseconds.
[09/07/2022-04:04:46] [I] [TRT] [MemUsageChange] TensorRT-managed allocation in engine deserialization: CPU +0, GPU +4, now: CPU 0, GPU 4 (MiB)
[09/07/2022-04:04:46] [I] Engine deserialized in 0.411127 sec.
[09/07/2022-04:04:46] [V] [TRT] Using cublas as a tactic source
[09/07/2022-04:04:46] [I] [TRT] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +10, now: CPU 481, GPU 958 (MiB)
[09/07/2022-04:04:46] [V] [TRT] Total per-runner device persistent memory is 0
[09/07/2022-04:04:46] [V] [TRT] Total per-runner host persistent memory is 4160
[09/07/2022-04:04:46] [V] [TRT] Allocated activation device memory of size 134218240
[09/07/2022-04:04:46] [I] [TRT] [MemUsageChange] TensorRT-managed allocation in IExecutionContext creation: CPU +0, GPU +128, now: CPU 0, GPU 132 (MiB)
[09/07/2022-04:04:46] [I] Using random values for input tensor-0
[09/07/2022-04:04:46] [I] Created input binding for tensor-0 with dimensions 32x256x1
[09/07/2022-04:04:46] [I] Using random values for output tensor-8
[09/07/2022-04:04:46] [I] Created output binding for tensor-8 with dimensions 32x256
[09/07/2022-04:04:46] [I] Starting inference
[09/07/2022-04:04:49] [I] Warmup completed 4 queries over 200 ms
[09/07/2022-04:04:49] [I] Timing trace has 73 queries over 3.10262 s
[09/07/2022-04:04:49] [I] 
[09/07/2022-04:04:49] [I] === Trace details ===
[09/07/2022-04:04:49] [I] Trace averages of 10 runs:
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 42.9301 ms - Host latency: 42.9301 ms (enqueue 0.0523773 ms)
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 42.2708 ms - Host latency: 42.2708 ms (enqueue 0.0597168 ms)
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 42.3317 ms - Host latency: 42.3317 ms (enqueue 0.0473511 ms)
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 43.0567 ms - Host latency: 43.0567 ms (enqueue 0.0555176 ms)
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 42.3118 ms - Host latency: 42.3118 ms (enqueue 0.0550659 ms)
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 42.2002 ms - Host latency: 42.2002 ms (enqueue 0.059375 ms)
[09/07/2022-04:04:49] [I] Average on 10 runs - GPU latency: 42.504 ms - Host latency: 42.504 ms (enqueue 0.057666 ms)
[09/07/2022-04:04:49] [I] 
[09/07/2022-04:04:49] [I] === Performance summary ===
[09/07/2022-04:04:49] [I] Throughput: 23.5285 qps
[09/07/2022-04:04:49] [I] Latency: min = 42.0999 ms, max = 49.8851 ms, mean = 42.5004 ms, median = 42.2205 ms, percentile(99%) = 49.8851 ms
[09/07/2022-04:04:49] [I] Enqueue Time: min = 0.0198975 ms, max = 0.0822144 ms, mean = 0.0553509 ms, median = 0.0568848 ms, percentile(99%) = 0.0822144 ms
[09/07/2022-04:04:49] [I] H2D Latency: min = 0 ms, max = 0 ms, mean = 0 ms, median = 0 ms, percentile(99%) = 0 ms
[09/07/2022-04:04:49] [I] GPU Compute Time: min = 42.0999 ms, max = 49.8851 ms, mean = 42.5004 ms, median = 42.2205 ms, percentile(99%) = 49.8851 ms
[09/07/2022-04:04:49] [I] D2H Latency: min = 0 ms, max = 0 ms, mean = 0 ms, median = 0 ms, percentile(99%) = 0 ms
[09/07/2022-04:04:49] [I] Total Host Walltime: 3.10262 s
[09/07/2022-04:04:49] [I] Total GPU Compute Time: 3.10253 s
[09/07/2022-04:04:49] [W] * GPU compute time is unstable, with coefficient of variance = 2.31709%.
[09/07/2022-04:04:49] [W]   If not already in use, locking GPU clock frequency or adding --useSpinWait may improve the stability.
[09/07/2022-04:04:49] [I] Explanations of the performance metrics are printed in the verbose logs.
[09/07/2022-04:04:49] [V] 
[09/07/2022-04:04:49] [V] === Explanations of the performance metrics ===
[09/07/2022-04:04:49] [V] Total Host Walltime: the host walltime from when the first query (after warmups) is enqueued to when the last query is completed.
[09/07/2022-04:04:49] [V] GPU Compute Time: the GPU latency to execute the kernels for a query.
[09/07/2022-04:04:49] [V] Total GPU Compute Time: the summation of the GPU Compute Time of all the queries. If this is significantly shorter than Total Host Walltime, the GPU may be under-utilized because of host-side overheads or data transfers.
[09/07/2022-04:04:49] [V] Throughput: the observed throughput computed by dividing the number of queries by the Total Host Walltime. If this is significantly lower than the reciprocal of GPU Compute Time, the GPU may be under-utilized because of host-side overheads or data transfers.
[09/07/2022-04:04:49] [V] Enqueue Time: the host latency to enqueue a query. If this is longer than GPU Compute Time, the GPU may be under-utilized.
[09/07/2022-04:04:49] [V] H2D Latency: the latency for host-to-device data transfers for input tensors of a single query.
[09/07/2022-04:04:49] [V] D2H Latency: the latency for device-to-host data transfers for output tensors of a single query.
[09/07/2022-04:04:49] [V] Latency: the summation of H2D Latency, GPU Compute Time, and D2H Latency. This is the latency to infer a single query.
[09/07/2022-04:04:49] [I] 
&&&& PASSED TensorRT.trtexec [TensorRT v8401] # trtexec --loadEngine=model-3D.plan --verbose --useCudaGraph --noDataTransfers --shapes=tensor-0:32x256x1
[09/07/2022-04:04:49] [TRT] [I] The logger passed into createInferBuilder differs from one already provided for an existing builder, runtime, or refitter. Uses of the global logger, returned by nvinfer1::getLogger(), will return the existing value.

[09/07/2022-04:04:49] [TRT] [I] [MemUsageChange] Init CUDA: CPU +0, GPU +0, now: CPU 915, GPU 679 (MiB)
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::BatchTilePlugin_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::BatchedNMS_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::BatchedNMSDynamic_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::CoordConvAC version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::CropAndResize version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::CropAndResizeDynamic version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::DecodeBbox3DPlugin version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::DetectionLayer_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::EfficientNMS_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::EfficientNMS_ONNX_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::EfficientNMS_Explicit_TF_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::EfficientNMS_Implicit_TF_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::FlattenConcat_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::GenerateDetection_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::GridAnchor_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::GridAnchorRect_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::InstanceNormalization_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::LReLU_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::MultilevelCropAndResize_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::MultilevelProposeROI_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::MultiscaleDeformableAttnPlugin_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::NMS_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::NMSDynamic_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::Normalize_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::PillarScatterPlugin version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::PriorBox_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::ProposalLayer_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::Proposal version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::ProposalDynamic version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::PyramidROIAlign_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::Region_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::Reorg_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::ResizeNearest_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::RPROI_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::ScatterND version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::SpecialSlice_TRT version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::Split version 1
[09/07/2022-04:04:49] [TRT] [V] Plugin creator already registered - ::VoxelGeneratorPlugin version 1
[09/07/2022-04:04:49] [TRT] [V] Adding network input: tensor-0 with dtype: float32, dimensions: (-1, -1, 1)
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0 for ONNX tensor: tensor-0
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constantS0
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constantS1
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant0
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant1
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant1x256
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant2048
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constant256
[09/07/2022-04:04:49] [TRT] [V] Importing initializer: constantM1
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myShapeN [Shape]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0
[09/07/2022-04:04:49] [TRT] [V] myShapeN [Shape] inputs: [tensor-0 -> (-1, -1, 1)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myShapeN for ONNX node: myShapeN
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: myShapeV for ONNX tensor: myShapeV
[09/07/2022-04:04:49] [TRT] [V] myShapeN [Shape] outputs: [myShapeV -> (3)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myGatherN0 [Gather]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: myShapeV
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constantS0
[09/07/2022-04:04:49] [TRT] [V] myGatherN0 [Gather] inputs: [myShapeV -> (3)[INT32]], [constantS0 -> ()[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constantS0 for ONNX node: constantS0
[09/07/2022-04:04:49] [TRT] [V] Using Gather axis: 0
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myGatherN0 for ONNX node: myGatherN0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: bTensorScalar for ONNX tensor: bTensorScalar
[09/07/2022-04:04:49] [TRT] [V] myGatherN0 [Gather] outputs: [bTensorScalar -> ()[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myGatherN1 [Gather]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: myShapeV
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constantS1
[09/07/2022-04:04:49] [TRT] [V] myGatherN1 [Gather] inputs: [myShapeV -> (3)[INT32]], [constantS1 -> ()[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constantS1 for ONNX node: constantS1
[09/07/2022-04:04:49] [TRT] [V] Using Gather axis: 0
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myGatherN1 for ONNX node: myGatherN1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tTensorScalar for ONNX tensor: tTensorScalar
[09/07/2022-04:04:49] [TRT] [V] myGatherN1 [Gather] outputs: [tTensorScalar -> ()[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myUnsqueezeN0 [Unsqueeze]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: bTensorScalar
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant0
[09/07/2022-04:04:49] [TRT] [V] myUnsqueezeN0 [Unsqueeze] inputs: [bTensorScalar -> ()[INT32]], [constant0 -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Original shape: (), unsqueezing to: (1,)
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myUnsqueezeN0 for ONNX node: myUnsqueezeN0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: bTensor for ONNX tensor: bTensor
[09/07/2022-04:04:49] [TRT] [V] myUnsqueezeN0 [Unsqueeze] outputs: [bTensor -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myUnsqueezeN1 [Unsqueeze]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tTensorScalar
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant0
[09/07/2022-04:04:49] [TRT] [V] myUnsqueezeN1 [Unsqueeze] inputs: [tTensorScalar -> ()[INT32]], [constant0 -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Original shape: (), unsqueezing to: (1,)
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myUnsqueezeN1 for ONNX node: myUnsqueezeN1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tTensor for ONNX tensor: tTensor
[09/07/2022-04:04:49] [TRT] [V] myUnsqueezeN1 [Unsqueeze] outputs: [tTensor -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myMulN [Mul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: bTensor
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tTensor
[09/07/2022-04:04:49] [TRT] [V] myMulN [Mul] inputs: [bTensor -> (1)[INT32]], [tTensor -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myMulN for ONNX node: myMulN
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: bTTensor for ONNX tensor: bTTensor
[09/07/2022-04:04:49] [TRT] [V] myMulN [Mul] outputs: [bTTensor -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myConcatN [Concat]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: bTTensor
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant1
[09/07/2022-04:04:49] [TRT] [V] myConcatN [Concat] inputs: [bTTensor -> (1)[INT32]], [constant1 -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constant1 for ONNX node: constant1
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myConcatN for ONNX node: myConcatN
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: bTComma1Tensor for ONNX tensor: bTComma1Tensor
[09/07/2022-04:04:49] [TRT] [V] myConcatN [Concat] outputs: [bTComma1Tensor -> (2)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myReshapeN-input [Reshape]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0
[09/07/2022-04:04:49] [TRT] [V] Searching for input: bTComma1Tensor
[09/07/2022-04:04:49] [TRT] [V] myReshapeN-input [Reshape] inputs: [tensor-0 -> (-1, -1, 1)[FLOAT]], [bTComma1Tensor -> (2)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myReshapeN-input for ONNX node: myReshapeN-input
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: reshapeV-input for ONNX tensor: reshapeV-input
[09/07/2022-04:04:49] [TRT] [V] myReshapeN-input [Reshape] outputs: [reshapeV-input -> (-1, 1)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU0 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: reshapeV-input
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant1x256
[09/07/2022-04:04:49] [TRT] [V] MMU0 [MatMul] inputs: [reshapeV-input -> (-1, 1)[FLOAT]], [constant1x256 -> (1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constant1x256 for ONNX node: constant1x256
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU0 for ONNX node: MMU0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1 for ONNX tensor: tensor-1
[09/07/2022-04:04:49] [TRT] [V] MMU0 [MatMul] outputs: [tensor-1 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-0 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-0 [MatMul] inputs: [tensor-1 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constant256x2048 for ONNX node: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-0 for ONNX node: MMU-0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0-1 for ONNX tensor: tensor-0-1
[09/07/2022-04:04:49] [TRT] [V] MMU-0 [MatMul] outputs: [tensor-0-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-0 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-0 [Add] inputs: [tensor-0-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constant2048 for ONNX node: constant2048
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-0 for ONNX node: AddU-0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0-2 for ONNX tensor: tensor-0-2
[09/07/2022-04:04:49] [TRT] [V] AddU-0 [Add] outputs: [tensor-0-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-0 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-0 [Relu] inputs: [tensor-0-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-0 for ONNX node: ReLUU-0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0-3 for ONNX tensor: tensor-0-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-0 [Relu] outputs: [tensor-0-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-0 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-0 [MatMul] inputs: [tensor-0-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constant2048x256 for ONNX node: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-0 for ONNX node: MMD-0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0-4 for ONNX tensor: tensor-0-4
[09/07/2022-04:04:49] [TRT] [V] MMD-0 [MatMul] outputs: [tensor-0-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-0 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-0 [Add] inputs: [tensor-0-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: constant256 for ONNX node: constant256
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-0 for ONNX node: AddD-0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0-5 for ONNX tensor: tensor-0-5
[09/07/2022-04:04:49] [TRT] [V] AddD-0 [Add] outputs: [tensor-0-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-0 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-0 [Relu] inputs: [tensor-0-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-0 for ONNX node: ReLUD-0
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-0-6 for ONNX tensor: tensor-0-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-0 [Relu] outputs: [tensor-0-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-1 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-0-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-1 [MatMul] inputs: [tensor-0-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-1 for ONNX node: MMU-1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1-1 for ONNX tensor: tensor-1-1
[09/07/2022-04:04:49] [TRT] [V] MMU-1 [MatMul] outputs: [tensor-1-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-1 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-1 [Add] inputs: [tensor-1-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-1 for ONNX node: AddU-1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1-2 for ONNX tensor: tensor-1-2
[09/07/2022-04:04:49] [TRT] [V] AddU-1 [Add] outputs: [tensor-1-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-1 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-1 [Relu] inputs: [tensor-1-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-1 for ONNX node: ReLUU-1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1-3 for ONNX tensor: tensor-1-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-1 [Relu] outputs: [tensor-1-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-1 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-1 [MatMul] inputs: [tensor-1-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-1 for ONNX node: MMD-1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1-4 for ONNX tensor: tensor-1-4
[09/07/2022-04:04:49] [TRT] [V] MMD-1 [MatMul] outputs: [tensor-1-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-1 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-1 [Add] inputs: [tensor-1-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-1 for ONNX node: AddD-1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1-5 for ONNX tensor: tensor-1-5
[09/07/2022-04:04:49] [TRT] [V] AddD-1 [Add] outputs: [tensor-1-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-1 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-1 [Relu] inputs: [tensor-1-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-1 for ONNX node: ReLUD-1
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-1-6 for ONNX tensor: tensor-1-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-1 [Relu] outputs: [tensor-1-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-2 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-1-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-2 [MatMul] inputs: [tensor-1-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-2 for ONNX node: MMU-2
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-2-1 for ONNX tensor: tensor-2-1
[09/07/2022-04:04:49] [TRT] [V] MMU-2 [MatMul] outputs: [tensor-2-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-2 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-2-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-2 [Add] inputs: [tensor-2-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-2 for ONNX node: AddU-2
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-2-2 for ONNX tensor: tensor-2-2
[09/07/2022-04:04:49] [TRT] [V] AddU-2 [Add] outputs: [tensor-2-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-2 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-2-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-2 [Relu] inputs: [tensor-2-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-2 for ONNX node: ReLUU-2
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-2-3 for ONNX tensor: tensor-2-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-2 [Relu] outputs: [tensor-2-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-2 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-2-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-2 [MatMul] inputs: [tensor-2-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-2 for ONNX node: MMD-2
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-2-4 for ONNX tensor: tensor-2-4
[09/07/2022-04:04:49] [TRT] [V] MMD-2 [MatMul] outputs: [tensor-2-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-2 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-2-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-2 [Add] inputs: [tensor-2-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-2 for ONNX node: AddD-2
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-2-5 for ONNX tensor: tensor-2-5
[09/07/2022-04:04:49] [TRT] [V] AddD-2 [Add] outputs: [tensor-2-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-2 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-2-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-2 [Relu] inputs: [tensor-2-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-2 for ONNX node: ReLUD-2
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-2-6 for ONNX tensor: tensor-2-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-2 [Relu] outputs: [tensor-2-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-3 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-2-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-3 [MatMul] inputs: [tensor-2-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-3 for ONNX node: MMU-3
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-3-1 for ONNX tensor: tensor-3-1
[09/07/2022-04:04:49] [TRT] [V] MMU-3 [MatMul] outputs: [tensor-3-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-3 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-3-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-3 [Add] inputs: [tensor-3-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-3 for ONNX node: AddU-3
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-3-2 for ONNX tensor: tensor-3-2
[09/07/2022-04:04:49] [TRT] [V] AddU-3 [Add] outputs: [tensor-3-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-3 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-3-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-3 [Relu] inputs: [tensor-3-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-3 for ONNX node: ReLUU-3
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-3-3 for ONNX tensor: tensor-3-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-3 [Relu] outputs: [tensor-3-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-3 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-3-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-3 [MatMul] inputs: [tensor-3-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-3 for ONNX node: MMD-3
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-3-4 for ONNX tensor: tensor-3-4
[09/07/2022-04:04:49] [TRT] [V] MMD-3 [MatMul] outputs: [tensor-3-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-3 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-3-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-3 [Add] inputs: [tensor-3-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-3 for ONNX node: AddD-3
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-3-5 for ONNX tensor: tensor-3-5
[09/07/2022-04:04:49] [TRT] [V] AddD-3 [Add] outputs: [tensor-3-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-3 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-3-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-3 [Relu] inputs: [tensor-3-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-3 for ONNX node: ReLUD-3
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-3-6 for ONNX tensor: tensor-3-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-3 [Relu] outputs: [tensor-3-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-4 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-3-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-4 [MatMul] inputs: [tensor-3-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-4 for ONNX node: MMU-4
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-4-1 for ONNX tensor: tensor-4-1
[09/07/2022-04:04:49] [TRT] [V] MMU-4 [MatMul] outputs: [tensor-4-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-4 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-4-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-4 [Add] inputs: [tensor-4-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-4 for ONNX node: AddU-4
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-4-2 for ONNX tensor: tensor-4-2
[09/07/2022-04:04:49] [TRT] [V] AddU-4 [Add] outputs: [tensor-4-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-4 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-4-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-4 [Relu] inputs: [tensor-4-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-4 for ONNX node: ReLUU-4
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-4-3 for ONNX tensor: tensor-4-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-4 [Relu] outputs: [tensor-4-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-4 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-4-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-4 [MatMul] inputs: [tensor-4-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-4 for ONNX node: MMD-4
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-4-4 for ONNX tensor: tensor-4-4
[09/07/2022-04:04:49] [TRT] [V] MMD-4 [MatMul] outputs: [tensor-4-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-4 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-4-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-4 [Add] inputs: [tensor-4-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-4 for ONNX node: AddD-4
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-4-5 for ONNX tensor: tensor-4-5
[09/07/2022-04:04:49] [TRT] [V] AddD-4 [Add] outputs: [tensor-4-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-4 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-4-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-4 [Relu] inputs: [tensor-4-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-4 for ONNX node: ReLUD-4
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-4-6 for ONNX tensor: tensor-4-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-4 [Relu] outputs: [tensor-4-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-5 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-4-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-5 [MatMul] inputs: [tensor-4-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-5 for ONNX node: MMU-5
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-5-1 for ONNX tensor: tensor-5-1
[09/07/2022-04:04:49] [TRT] [V] MMU-5 [MatMul] outputs: [tensor-5-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-5 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-5-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-5 [Add] inputs: [tensor-5-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-5 for ONNX node: AddU-5
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-5-2 for ONNX tensor: tensor-5-2
[09/07/2022-04:04:49] [TRT] [V] AddU-5 [Add] outputs: [tensor-5-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-5 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-5-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-5 [Relu] inputs: [tensor-5-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-5 for ONNX node: ReLUU-5
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-5-3 for ONNX tensor: tensor-5-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-5 [Relu] outputs: [tensor-5-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-5 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-5-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-5 [MatMul] inputs: [tensor-5-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-5 for ONNX node: MMD-5
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-5-4 for ONNX tensor: tensor-5-4
[09/07/2022-04:04:49] [TRT] [V] MMD-5 [MatMul] outputs: [tensor-5-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-5 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-5-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-5 [Add] inputs: [tensor-5-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-5 for ONNX node: AddD-5
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-5-5 for ONNX tensor: tensor-5-5
[09/07/2022-04:04:49] [TRT] [V] AddD-5 [Add] outputs: [tensor-5-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-5 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-5-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-5 [Relu] inputs: [tensor-5-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-5 for ONNX node: ReLUD-5
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-5-6 for ONNX tensor: tensor-5-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-5 [Relu] outputs: [tensor-5-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-6 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-5-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-6 [MatMul] inputs: [tensor-5-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-6 for ONNX node: MMU-6
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-6-1 for ONNX tensor: tensor-6-1
[09/07/2022-04:04:49] [TRT] [V] MMU-6 [MatMul] outputs: [tensor-6-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-6 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-6-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-6 [Add] inputs: [tensor-6-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-6 for ONNX node: AddU-6
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-6-2 for ONNX tensor: tensor-6-2
[09/07/2022-04:04:49] [TRT] [V] AddU-6 [Add] outputs: [tensor-6-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-6 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-6-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-6 [Relu] inputs: [tensor-6-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-6 for ONNX node: ReLUU-6
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-6-3 for ONNX tensor: tensor-6-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-6 [Relu] outputs: [tensor-6-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-6 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-6-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-6 [MatMul] inputs: [tensor-6-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-6 for ONNX node: MMD-6
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-6-4 for ONNX tensor: tensor-6-4
[09/07/2022-04:04:49] [TRT] [V] MMD-6 [MatMul] outputs: [tensor-6-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-6 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-6-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-6 [Add] inputs: [tensor-6-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-6 for ONNX node: AddD-6
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-6-5 for ONNX tensor: tensor-6-5
[09/07/2022-04:04:49] [TRT] [V] AddD-6 [Add] outputs: [tensor-6-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-6 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-6-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-6 [Relu] inputs: [tensor-6-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-6 for ONNX node: ReLUD-6
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-6-6 for ONNX tensor: tensor-6-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-6 [Relu] outputs: [tensor-6-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-7 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-6-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-7 [MatMul] inputs: [tensor-6-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-7 for ONNX node: MMU-7
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-7-1 for ONNX tensor: tensor-7-1
[09/07/2022-04:04:49] [TRT] [V] MMU-7 [MatMul] outputs: [tensor-7-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-7 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-7-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-7 [Add] inputs: [tensor-7-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-7 for ONNX node: AddU-7
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-7-2 for ONNX tensor: tensor-7-2
[09/07/2022-04:04:49] [TRT] [V] AddU-7 [Add] outputs: [tensor-7-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-7 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-7-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-7 [Relu] inputs: [tensor-7-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-7 for ONNX node: ReLUU-7
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-7-3 for ONNX tensor: tensor-7-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-7 [Relu] outputs: [tensor-7-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-7 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-7-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-7 [MatMul] inputs: [tensor-7-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-7 for ONNX node: MMD-7
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-7-4 for ONNX tensor: tensor-7-4
[09/07/2022-04:04:49] [TRT] [V] MMD-7 [MatMul] outputs: [tensor-7-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-7 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-7-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-7 [Add] inputs: [tensor-7-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-7 for ONNX node: AddD-7
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-7-5 for ONNX tensor: tensor-7-5
[09/07/2022-04:04:49] [TRT] [V] AddD-7 [Add] outputs: [tensor-7-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-7 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-7-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-7 [Relu] inputs: [tensor-7-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-7 for ONNX node: ReLUD-7
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-7-6 for ONNX tensor: tensor-7-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-7 [Relu] outputs: [tensor-7-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-8 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-7-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-8 [MatMul] inputs: [tensor-7-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-8 for ONNX node: MMU-8
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8-1 for ONNX tensor: tensor-8-1
[09/07/2022-04:04:49] [TRT] [V] MMU-8 [MatMul] outputs: [tensor-8-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-8 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-8 [Add] inputs: [tensor-8-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-8 for ONNX node: AddU-8
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8-2 for ONNX tensor: tensor-8-2
[09/07/2022-04:04:49] [TRT] [V] AddU-8 [Add] outputs: [tensor-8-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-8 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-8 [Relu] inputs: [tensor-8-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-8 for ONNX node: ReLUU-8
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8-3 for ONNX tensor: tensor-8-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-8 [Relu] outputs: [tensor-8-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-8 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-8 [MatMul] inputs: [tensor-8-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-8 for ONNX node: MMD-8
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8-4 for ONNX tensor: tensor-8-4
[09/07/2022-04:04:49] [TRT] [V] MMD-8 [MatMul] outputs: [tensor-8-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-8 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-8 [Add] inputs: [tensor-8-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-8 for ONNX node: AddD-8
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8-5 for ONNX tensor: tensor-8-5
[09/07/2022-04:04:49] [TRT] [V] AddD-8 [Add] outputs: [tensor-8-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-8 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-8 [Relu] inputs: [tensor-8-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-8 for ONNX node: ReLUD-8
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8-6 for ONNX tensor: tensor-8-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-8 [Relu] outputs: [tensor-8-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMU-9 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256x2048
[09/07/2022-04:04:49] [TRT] [V] MMU-9 [MatMul] inputs: [tensor-8-6 -> (-1, 256)[FLOAT]], [constant256x2048 -> (256, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMU-9 for ONNX node: MMU-9
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-9-1 for ONNX tensor: tensor-9-1
[09/07/2022-04:04:49] [TRT] [V] MMU-9 [MatMul] outputs: [tensor-9-1 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddU-9 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-9-1
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048
[09/07/2022-04:04:49] [TRT] [V] AddU-9 [Add] inputs: [tensor-9-1 -> (-1, 2048)[FLOAT]], [constant2048 -> (2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddU-9 for ONNX node: AddU-9
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-9-2 for ONNX tensor: tensor-9-2
[09/07/2022-04:04:49] [TRT] [V] AddU-9 [Add] outputs: [tensor-9-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUU-9 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-9-2
[09/07/2022-04:04:49] [TRT] [V] ReLUU-9 [Relu] inputs: [tensor-9-2 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUU-9 for ONNX node: ReLUU-9
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-9-3 for ONNX tensor: tensor-9-3
[09/07/2022-04:04:49] [TRT] [V] ReLUU-9 [Relu] outputs: [tensor-9-3 -> (-1, 2048)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: MMD-9 [MatMul]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-9-3
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant2048x256
[09/07/2022-04:04:49] [TRT] [V] MMD-9 [MatMul] inputs: [tensor-9-3 -> (-1, 2048)[FLOAT]], [constant2048x256 -> (2048, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: MMD-9 for ONNX node: MMD-9
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-9-4 for ONNX tensor: tensor-9-4
[09/07/2022-04:04:49] [TRT] [V] MMD-9 [MatMul] outputs: [tensor-9-4 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: AddD-9 [Add]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-9-4
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constant256
[09/07/2022-04:04:49] [TRT] [V] AddD-9 [Add] inputs: [tensor-9-4 -> (-1, 256)[FLOAT]], [constant256 -> (256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: AddD-9 for ONNX node: AddD-9
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-9-5 for ONNX tensor: tensor-9-5
[09/07/2022-04:04:49] [TRT] [V] AddD-9 [Add] outputs: [tensor-9-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: ReLUD-9 [Relu]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-9-5
[09/07/2022-04:04:49] [TRT] [V] ReLUD-9 [Relu] inputs: [tensor-9-5 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: ReLUD-9 for ONNX node: ReLUD-9
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-9-6 for ONNX tensor: tensor-9-6
[09/07/2022-04:04:49] [TRT] [V] ReLUD-9 [Relu] outputs: [tensor-9-6 -> (-1, 256)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: Reduce [ReduceSum]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-9-6
[09/07/2022-04:04:49] [TRT] [V] Searching for input: constantM1
[09/07/2022-04:04:49] [TRT] [V] Reduce [ReduceSum] inputs: [tensor-9-6 -> (-1, 256)[FLOAT]], [constantM1 -> (1)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: Reduce for ONNX node: Reduce
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: tensor-8 for ONNX tensor: tensor-8
[09/07/2022-04:04:49] [TRT] [V] Reduce [ReduceSum] outputs: [tensor-8 -> (-1)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Parsing node: myReshapeN-output [Reshape]
[09/07/2022-04:04:49] [TRT] [V] Searching for input: tensor-8
[09/07/2022-04:04:49] [TRT] [V] Searching for input: myShapeV
[09/07/2022-04:04:49] [TRT] [V] myReshapeN-output [Reshape] inputs: [tensor-8 -> (-1)[FLOAT]], [myShapeV -> (3)[INT32]], 
[09/07/2022-04:04:49] [TRT] [V] Registering layer: myReshapeN-output for ONNX node: myReshapeN-output
[09/07/2022-04:04:49] [TRT] [V] Registering tensor: reshapeV-output_4 for ONNX tensor: reshapeV-output
[09/07/2022-04:04:49] [TRT] [V] myReshapeN-output [Reshape] outputs: [reshapeV-output -> (-1, -1, 1)[FLOAT]], 
[09/07/2022-04:04:49] [TRT] [V] Marking reshapeV-output_4 as output: reshapeV-output
[09/07/2022-04:04:49] [TRT] [V] Applying generic optimizations to the graph for inference.
[09/07/2022-04:04:49] [TRT] [V] Original: 89 layers
[09/07/2022-04:04:49] [TRT] [V] After dead-layer removal: 89 layers
[09/07/2022-04:04:49] [TRT] [V] After Myelin optimization: 89 layers
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU0
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU0 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-0
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-0 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-0
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-0 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-1
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-1 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-1
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-1 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-2
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-2 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-2
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-2 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-3
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-3 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-3
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-3 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-4
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-4 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-4
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-4 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-5
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-5 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-5
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-5 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-6
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-6 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-6
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-6 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-7
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-7 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-7
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-7 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-8
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-8 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-8
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-8 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMU-9
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMU-9 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: MatMulToConvTransform on MMD-9
[09/07/2022-04:04:49] [TRT] [V] Convert layer type of MMD-9 from MATRIX_MULTIPLY to CONVOLUTION
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on myReshapeN-input
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing myReshapeN-input with reshape_before_MMU0
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on reshape_after_MMU0
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing reshape_after_MMU0 with reshape_before_MMU-0
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on reshape_after_MMU0 + reshape_before_MMU-0
[09/07/2022-04:04:49] [TRT] [V] Removing reshape_after_MMU0 + reshape_before_MMU-0
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-0
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-0 --> reshape_after_MMU-0 --> AddU-0
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-0
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-0 --> reshape_after_MMD-0 --> AddD-0
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-1
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-1 --> reshape_after_MMU-1 --> AddU-1
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-1
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-1 --> reshape_after_MMD-1 --> AddD-1
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-2
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-2 --> reshape_after_MMU-2 --> AddU-2
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-2
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-2 --> reshape_after_MMD-2 --> AddD-2
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-3
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-3 --> reshape_after_MMU-3 --> AddU-3
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-3
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-3 --> reshape_after_MMD-3 --> AddD-3
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-4
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-4 --> reshape_after_MMU-4 --> AddU-4
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-4
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-4 --> reshape_after_MMD-4 --> AddD-4
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-5
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-5 --> reshape_after_MMU-5 --> AddU-5
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-5
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-5 --> reshape_after_MMD-5 --> AddD-5
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-6
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-6 --> reshape_after_MMU-6 --> AddU-6
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-6
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-6 --> reshape_after_MMD-6 --> AddD-6
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-7
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-7 --> reshape_after_MMU-7 --> AddU-7
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-7
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-7 --> reshape_after_MMD-7 --> AddD-7
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-8
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-8 --> reshape_after_MMU-8 --> AddU-8
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-8
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-8 --> reshape_after_MMD-8 --> AddD-8
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMU-9
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMU-9 --> reshape_after_MMU-9 --> AddU-9
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownJoin on reshape_after_MMD-9
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_JOIN case: MMD-9 --> reshape_after_MMD-9 --> AddD-9
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 16) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 16) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 26) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 26) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 34) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 34) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 42) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 42) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 50) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 50) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 58) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 58) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 66) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 66) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 74) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 74) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 82) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 82) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 90) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 90) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 22) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 22) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 30) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 30) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 38) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 38) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 46) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 46) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 54) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 54) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 62) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 62) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 70) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 70) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 78) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 78) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 86) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 86) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on (Unnamed Layer* 94) [Shuffle]
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing (Unnamed Layer* 94) [Shuffle] with unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Applying ScaleNodes fusions.
[09/07/2022-04:04:49] [TRT] [V] After scale fusion: 125 layers
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-0
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-0 --> copied_squeeze_after_AddU-0 --> ReLUU-0
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-0
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-0 --> copied_squeeze_after_AddD-0 --> ReLUD-0
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-1
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-1 --> copied_squeeze_after_AddU-1 --> ReLUU-1
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-1
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-1 --> copied_squeeze_after_AddD-1 --> ReLUD-1
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-2
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-2 --> copied_squeeze_after_AddU-2 --> ReLUU-2
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-2
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-2 --> copied_squeeze_after_AddD-2 --> ReLUD-2
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-3
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-3 --> copied_squeeze_after_AddU-3 --> ReLUU-3
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-3
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-3 --> copied_squeeze_after_AddD-3 --> ReLUD-3
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-4
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-4 --> copied_squeeze_after_AddU-4 --> ReLUU-4
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-4
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-4 --> copied_squeeze_after_AddD-4 --> ReLUD-4
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-5
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-5 --> copied_squeeze_after_AddU-5 --> ReLUU-5
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-5
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-5 --> copied_squeeze_after_AddD-5 --> ReLUD-5
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-6
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-6 --> copied_squeeze_after_AddU-6 --> ReLUU-6
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-6
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-6 --> copied_squeeze_after_AddD-6 --> ReLUD-6
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-7
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-7 --> copied_squeeze_after_AddU-7 --> ReLUU-7
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-7
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-7 --> copied_squeeze_after_AddD-7 --> ReLUD-7
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-8
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-8 --> copied_squeeze_after_AddU-8 --> ReLUU-8
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-8
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-8 --> copied_squeeze_after_AddD-8 --> ReLUD-8
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddU-9
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddU-9 --> copied_squeeze_after_AddU-9 --> ReLUU-9
[09/07/2022-04:04:49] [TRT] [V] Running: SqueezePushDownFork on copied_squeeze_after_AddD-9
[09/07/2022-04:04:49] [TRT] [V] -----------SqueezePushDown kSQUEEZE_FORK case: AddD-9 --> copied_squeeze_after_AddD-9 --> ReLUD-9
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-0
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-0 with reshape_before_MMD-0
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-0
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-0 with reshape_before_MMU-1
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-1
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-1 with reshape_before_MMD-1
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-1
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-1 with reshape_before_MMU-2
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-2
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-2 with reshape_before_MMD-2
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-2
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-2 with reshape_before_MMU-3
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-3
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-3 with reshape_before_MMD-3
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-3
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-3 with reshape_before_MMU-4
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-4
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-4 with reshape_before_MMD-4
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-4
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-4 with reshape_before_MMU-5
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-5
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-5 with reshape_before_MMD-5
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-5
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-5 with reshape_before_MMU-6
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-6
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-6 with reshape_before_MMD-6
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-6
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-6 with reshape_before_MMU-7
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-7
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-7 with reshape_before_MMD-7
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-7
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-7 with reshape_before_MMU-8
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-8
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-8 with reshape_before_MMD-8
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUD-8
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUD-8 with reshape_before_MMU-9
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleShuffleFusion on squeeze_after_ReLUU-9
[09/07/2022-04:04:49] [TRT] [V] ShuffleShuffleFusion: Fusing squeeze_after_ReLUU-9 with reshape_before_MMD-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConstantSplit on constant2048
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048 with (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output with AddU-0
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_1
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_1 with (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output with AddU-1
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_2
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_2 with (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output with AddU-2
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_3
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_3 with (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output with AddU-3
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_4
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_4 with (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output with AddU-4
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_5
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_5 with (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output with AddU-5
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_6
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_6 with (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output with AddU-6
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_7
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_7 with (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output with AddU-7
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_8
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_8 with (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output with AddU-8
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant2048_clone_9
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant2048_clone_9 with (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output with AddU-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConstantSplit on constant256
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256 with (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output with AddD-0
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_1
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_1 with (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output with AddD-1
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_2
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_2 with (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output with AddD-2
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_3
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_3 with (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output with AddD-3
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_4
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_4 with (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output with AddD-4
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_5
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_5 with (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output with AddD-5
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_6
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_6 with (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output with AddD-6
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_7
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_7 with (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output with AddD-7
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_8
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_8 with (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output with AddD-8
[09/07/2022-04:04:49] [TRT] [V] Running: ConstShuffleFusion on constant256_clone_9
[09/07/2022-04:04:49] [TRT] [V] ConstShuffleFusion: Fusing constant256_clone_9 with (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] Running: ConstEltFusion on constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output
[09/07/2022-04:04:49] [TRT] [V] ConstEltFusion: Fusing constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output with AddD-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-0
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-0 with constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 with ReLUU-0
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-0 + reshape_before_MMD-0
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-0 + reshape_before_MMD-0
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-0
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-0 with constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 with ReLUD-0
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-0 + reshape_before_MMU-1
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-0 + reshape_before_MMU-1
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-1
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-1 with constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output + AddU-1
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-1 + constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output + AddU-1
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-1 + constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output + AddU-1 with ReLUU-1
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-1 + reshape_before_MMD-1
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-1 + reshape_before_MMD-1
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-1
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-1 with constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output + AddD-1
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-1 + constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output + AddD-1
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-1 + constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output + AddD-1 with ReLUD-1
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-1 + reshape_before_MMU-2
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-1 + reshape_before_MMU-2
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-2
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-2 with constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output + AddU-2
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-2 + constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output + AddU-2
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-2 + constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output + AddU-2 with ReLUU-2
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-2 + reshape_before_MMD-2
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-2 + reshape_before_MMD-2
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-2
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-2 with constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output + AddD-2
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-2 + constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output + AddD-2
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-2 + constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output + AddD-2 with ReLUD-2
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-2 + reshape_before_MMU-3
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-2 + reshape_before_MMU-3
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-3
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-3 with constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output + AddU-3
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-3 + constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output + AddU-3
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-3 + constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output + AddU-3 with ReLUU-3
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-3 + reshape_before_MMD-3
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-3 + reshape_before_MMD-3
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-3
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-3 with constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output + AddD-3
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-3 + constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output + AddD-3
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-3 + constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output + AddD-3 with ReLUD-3
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-3 + reshape_before_MMU-4
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-3 + reshape_before_MMU-4
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-4
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-4 with constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output + AddU-4
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-4 + constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output + AddU-4
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-4 + constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output + AddU-4 with ReLUU-4
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-4 + reshape_before_MMD-4
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-4 + reshape_before_MMD-4
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-4
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-4 with constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output + AddD-4
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-4 + constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output + AddD-4
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-4 + constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output + AddD-4 with ReLUD-4
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-4 + reshape_before_MMU-5
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-4 + reshape_before_MMU-5
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-5
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-5 with constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output + AddU-5
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-5 + constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output + AddU-5
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-5 + constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output + AddU-5 with ReLUU-5
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-5 + reshape_before_MMD-5
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-5 + reshape_before_MMD-5
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-5
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-5 with constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output + AddD-5
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-5 + constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output + AddD-5
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-5 + constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output + AddD-5 with ReLUD-5
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-5 + reshape_before_MMU-6
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-5 + reshape_before_MMU-6
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-6
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-6 with constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output + AddU-6
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-6 + constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output + AddU-6
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-6 + constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output + AddU-6 with ReLUU-6
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-6 + reshape_before_MMD-6
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-6 + reshape_before_MMD-6
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-6
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-6 with constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output + AddD-6
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-6 + constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output + AddD-6
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-6 + constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output + AddD-6 with ReLUD-6
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-6 + reshape_before_MMU-7
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-6 + reshape_before_MMU-7
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-7
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-7 with constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output + AddU-7
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-7 + constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output + AddU-7
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-7 + constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output + AddU-7 with ReLUU-7
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-7 + reshape_before_MMD-7
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-7 + reshape_before_MMD-7
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-7
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-7 with constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output + AddD-7
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-7 + constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output + AddD-7
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-7 + constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output + AddD-7 with ReLUD-7
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-7 + reshape_before_MMU-8
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-7 + reshape_before_MMU-8
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-8
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-8 with constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output + AddU-8
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-8 + constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output + AddU-8
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-8 + constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output + AddU-8 with ReLUU-8
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-8 + reshape_before_MMD-8
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-8 + reshape_before_MMD-8
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-8
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-8 with constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output + AddD-8
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-8 + constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output + AddD-8
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-8 + constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output + AddD-8 with ReLUD-8
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUD-8 + reshape_before_MMU-9
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUD-8 + reshape_before_MMU-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMU-9
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMU-9 with constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output + AddU-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMU-9 + constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output + AddU-9
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMU-9 + constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output + AddU-9 with ReLUU-9
[09/07/2022-04:04:49] [TRT] [V] Running: ShuffleErasure on squeeze_after_ReLUU-9 + reshape_before_MMD-9
[09/07/2022-04:04:49] [TRT] [V] Removing squeeze_after_ReLUU-9 + reshape_before_MMD-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConvScaleFusion on MMD-9
[09/07/2022-04:04:49] [TRT] [V] ConvScaleFusion: Fusing MMD-9 with constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output + AddD-9
[09/07/2022-04:04:49] [TRT] [V] Running: ConvReluFusion on MMD-9 + constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output + AddD-9
[09/07/2022-04:04:49] [TRT] [V] ConvReluFusion: Fusing MMD-9 + constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output + AddD-9 with ReLUD-9
[09/07/2022-04:04:49] [TRT] [V] After dupe layer removal: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After final dead-layer removal: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After tensor merging: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After vertical fusions: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After dupe layer removal: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After final dead-layer removal: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After tensor merging: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After slice removal: 25 layers
[09/07/2022-04:04:49] [TRT] [V] After concat removal: 25 layers
[09/07/2022-04:04:49] [TRT] [V] Trying to split Reshape and strided tensor
[09/07/2022-04:04:49] [TRT] [V] Graph construction and optimization completed in 0.0663954 seconds.
[09/07/2022-04:04:49] [TRT] [V] Using cublas as a tactic source
[09/07/2022-04:04:49] [TRT] [I] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +1, GPU +10, now: CPU 960, GPU 689 (MiB)
[09/07/2022-04:04:49] [TRT] [V] Using cuDNN as a tactic source
[09/07/2022-04:04:49] [TRT] [I] [MemUsageChange] Init cuDNN: CPU +0, GPU +8, now: CPU 960, GPU 697 (MiB)
[09/07/2022-04:04:49] [TRT] [I] Local timing cache in use. Profiling results in this builder pass will not be stored.
[09/07/2022-04:04:49] [TRT] [V] Constructing optimization profile number 0 [1/1].
[09/07/2022-04:04:49] [TRT] [V] Reserving memory for host IO tensors. Host: 0 bytes
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float((# 1 (SHAPE tensor-0)),1,1) -> Float(1,(# 0 (SHAPE tensor-0)),(# 0 (SHAPE tensor-0))) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0 -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00302482
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0157018
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00276452
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00276452
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float((# 1 (SHAPE tensor-0)),1,1) -> Float((# 1 (SHAPE tensor-0)):32,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(tensor-0 -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00311726
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0157135
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00309413
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00309413
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(1,1:32,1,1) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(reshape_before_MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.00274588
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0290987
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00276849
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x00000000000003e8 Time: 0.00274588
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(1,1:32,1,1) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.108163
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0868693
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.108347
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.0868693
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(MMU0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.102664
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.0879787
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.102555
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.0879787
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(ReLUU-0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.846272
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.667307
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.846165
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.667307
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: Optimizer Reformat(ReLUU-0_out_tensor -> <out>) (Reformat)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003e8 Time: 0.800085
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x00000000000003ea Time: 0.668843
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.800768
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x00000000000003ea Time: 0.668843
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,1,1) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(2048,1,2048,2048) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning Reformat: Float(256,1,256,256) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] =============== Computing reformatting costs
[09/07/2022-04:04:49] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning format combination: Float((# 1 (SHAPE tensor-0)),1,1) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: myReshapeN-input + reshape_before_MMU0 (Shuffle)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.00440631
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0158099
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.00440631
[09/07/2022-04:04:49] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning format combination: Float(1,(# 0 (SHAPE tensor-0)),(# 0 (SHAPE tensor-0))) -> Float(1,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: myReshapeN-input + reshape_before_MMU0 (Shuffle)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0039488
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0189991
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0039488
[09/07/2022-04:04:49] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning format combination: Float((# 1 (SHAPE tensor-0)):32,1,1) -> Float(1,1:32,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: myReshapeN-input + reshape_before_MMU0 (Shuffle)
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0131282
[09/07/2022-04:04:49] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0442027
[09/07/2022-04:04:49] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0131282
[09/07/2022-04:04:49] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:49] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:49] [TRT] [V] *************** Autotuning format combination: Float(1,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: MMU0 (CudaDepthwiseConvolution)
[09/07/2022-04:04:49] [TRT] [V] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:49] [TRT] [V] --------------- Timing Runner: MMU0 (FusedConvActConvolution)
[09/07/2022-04:04:49] [TRT] [V] FusedConvActConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU0 (CudnnConvolution)
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0950613
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0950667
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000002 Time: 0.0945493
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000004 Time: 23.3453
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000005 Time: 3.02387
[09/07/2022-04:04:50] [TRT] [V] Fastest Tactic: 0x0000000000000002 Time: 0.0945493
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU0 (CublasConvolution)
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0409825
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.04188
[09/07/2022-04:04:50] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0409825
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU0 (CaskConvolution)
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v1 Tactic: 0x0ebe499388e08286
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x0ebe499388e08286 Time: 0.358059
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v0 Tactic: 0x1792ed6b0f1ea883
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x1792ed6b0f1ea883 Time: 0.179029
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v1 Tactic: 0x3e787008e11a6129
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x3e787008e11a6129 Time: 0.398411
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v1 Tactic: 0x474c9edd1ecfbbba
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x474c9edd1ecfbbba Time: 0.368981
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v0 Tactic: 0x4963fb96b4067e81
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x4963fb96b4067e81 Time: 0.395605
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v1 Tactic: 0x49ecad9da64c487b
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x49ecad9da64c487b Time: 0.386731
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v0 Tactic: 0x4c5584586319b832
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x4c5584586319b832 Time: 0.398336
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v1 Tactic: 0x5c38385751ccb068
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x5c38385751ccb068 Time: 0.366251
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v0 Tactic: 0x632674f65e3422ae
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x632674f65e3422ae Time: 0.165092
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v0 Tactic: 0x8d563cb6e2bd3e46
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0x8d563cb6e2bd3e46 Time: 0.397312
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v1 Tactic: 0xa4bca1d50cb9f7ec
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xa4bca1d50cb9f7ec Time: 0.369664
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v0 Tactic: 0xbd90052d8b47dde9
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xbd90052d8b47dde9 Time: 0.165092
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v1 Tactic: 0xd00838485d937dc1
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xd00838485d937dc1 Time: 0.366933
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v0 Tactic: 0xef1674e9526bef07
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xef1674e9526bef07 Time: 0.380587
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v0 Tactic: 0xf462d2631d68e4d5
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xf462d2631d68e4d5 Time: 0.382976
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v1 Tactic: 0xfa4db728b7a121ee
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xfa4db728b7a121ee Time: 0.400384
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v0 Tactic: 0xfac2e123a5eb1714
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xfac2e123a5eb1714 Time: 0.394581
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xff7bc8e660bee75d
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xff7bc8e660bee75d Time: 0.388779
[09/07/2022-04:04:50] [TRT] [V] Fastest Tactic: 0x632674f65e3422ae Time: 0.165092
[09/07/2022-04:04:50] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CublasConvolution Tactic: 0x0000000000000000
[09/07/2022-04:04:50] [TRT] [V] *************** Autotuning format combination: Float(1,1,1,1) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU0 (CublasConvolution)
[09/07/2022-04:04:50] [TRT] [V] CublasConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU0 (CaskConvolution)
[09/07/2022-04:04:50] [TRT] [V] MMU0 Set Tactic Name: sm50_xmma_conv_fprop_generic_f32f32_f32_f32_nchwkcrs_nchw Tactic: 0xc9f2c7cbb5759197
[09/07/2022-04:04:50] [TRT] [V] Tactic: 0xc9f2c7cbb5759197 Time: 10000
[09/07/2022-04:04:50] [TRT] [V] Fastest Tactic: 0xc9f2c7cbb5759197 Time: 10000
[09/07/2022-04:04:50] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0xc9f2c7cbb5759197
[09/07/2022-04:04:50] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:50] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (CudaDepthwiseConvolution)
[09/07/2022-04:04:50] [TRT] [V] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:50] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (FusedConvActConvolution)
[09/07/2022-04:04:50] [TRT] [V] FusedConvActConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:51] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (CudnnConvolution)
[09/07/2022-04:04:51] [TRT] [V] Tactic: 0x0000000000000000 Time: 3.45634
[09/07/2022-04:04:51] [TRT] [V] Tactic: 0x0000000000000001 Time: 3.45907
[09/07/2022-04:04:51] [TRT] [V] Tactic: 0x0000000000000002 Time: 4.66295
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x0000000000000005 Time: 113.395
[09/07/2022-04:04:52] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 3.45634
[09/07/2022-04:04:52] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (CublasConvolution)
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x0000000000000000 Time: 2.27396
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x0000000000000001 Time: 2.34598
[09/07/2022-04:04:52] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 2.27396
[09/07/2022-04:04:52] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (CaskConvolution)
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v1 Tactic: 0x0ebe499388e08286
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x0ebe499388e08286 Time: 5.19509
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v0 Tactic: 0x1792ed6b0f1ea883
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x1792ed6b0f1ea883 Time: 4.31479
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v1 Tactic: 0x3e787008e11a6129
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x3e787008e11a6129 Time: 3.16006
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v1 Tactic: 0x474c9edd1ecfbbba
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x474c9edd1ecfbbba Time: 2.90645
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v0 Tactic: 0x4963fb96b4067e81
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x4963fb96b4067e81 Time: 2.70814
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v1 Tactic: 0x49ecad9da64c487b
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x49ecad9da64c487b Time: 2.86583
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v0 Tactic: 0x4c5584586319b832
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x4c5584586319b832 Time: 4.35371
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v1 Tactic: 0x5c38385751ccb068
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x5c38385751ccb068 Time: 2.96653
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v0 Tactic: 0x632674f65e3422ae
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x632674f65e3422ae Time: 3.88369
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v0 Tactic: 0x8d563cb6e2bd3e46
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x8d563cb6e2bd3e46 Time: 2.54601
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v1 Tactic: 0xa4bca1d50cb9f7ec
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xa4bca1d50cb9f7ec Time: 4.29875
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v0 Tactic: 0xbd90052d8b47dde9
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xbd90052d8b47dde9 Time: 3.89359
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v1 Tactic: 0xd00838485d937dc1
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xd00838485d937dc1 Time: 4.71074
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v0 Tactic: 0xef1674e9526bef07
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xef1674e9526bef07 Time: 4.02022
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v0 Tactic: 0xf462d2631d68e4d5
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xf462d2631d68e4d5 Time: 4.17751
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v1 Tactic: 0xfa4db728b7a121ee
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xfa4db728b7a121ee Time: 3.12787
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v0 Tactic: 0xfac2e123a5eb1714
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xfac2e123a5eb1714 Time: 2.46886
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xff7bc8e660bee75d
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0xff7bc8e660bee75d Time: 2.67093
[09/07/2022-04:04:52] [TRT] [V] Fastest Tactic: 0xfac2e123a5eb1714 Time: 2.46886
[09/07/2022-04:04:52] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CublasConvolution Tactic: 0x0000000000000000
[09/07/2022-04:04:52] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:52] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (CublasConvolution)
[09/07/2022-04:04:52] [TRT] [V] CublasConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:52] [TRT] [V] --------------- Timing Runner: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (CaskConvolution)
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x35f071de80e3b3c4 Time: 1.55068
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x5c024b37b78e77c0
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x5c024b37b78e77c0 Time: 1.83296
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x80f932c0b8ce5940
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x80f932c0b8ce5940 Time: 1.85378
[09/07/2022-04:04:52] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x9961ac24fc07a1df
[09/07/2022-04:04:52] [TRT] [V] Tactic: 0x9961ac24fc07a1df Time: 1.55785
[09/07/2022-04:04:52] [TRT] [V] Fastest Tactic: 0x35f071de80e3b3c4 Time: 1.55068
[09/07/2022-04:04:52] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:52] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:52] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:52] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (CudaDepthwiseConvolution)
[09/07/2022-04:04:52] [TRT] [V] CudaDepthwiseConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:52] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (FusedConvActConvolution)
[09/07/2022-04:04:52] [TRT] [V] FusedConvActConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:53] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (CudnnConvolution)
[09/07/2022-04:04:53] [TRT] [V] Tactic: 0x0000000000000000 Time: 1.87392
[09/07/2022-04:04:53] [TRT] [V] Tactic: 0x0000000000000001 Time: 3.24676
[09/07/2022-04:04:53] [TRT] [V] Tactic: 0x0000000000000002 Time: 7.97047
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000005 Time: 118.684
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 1.87392
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (CublasConvolution)
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000000 Time: 1.58037
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000001 Time: 1.56331
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0x0000000000000001 Time: 1.56331
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (CaskConvolution)
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v1 Tactic: 0x0ebe499388e08286
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0ebe499388e08286 Time: 5.29476
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v0 Tactic: 0x1792ed6b0f1ea883
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x1792ed6b0f1ea883 Time: 3.20171
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v1 Tactic: 0x3e787008e11a6129
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x3e787008e11a6129 Time: 1.74558
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v1 Tactic: 0x474c9edd1ecfbbba
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x474c9edd1ecfbbba Time: 1.97905
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v0 Tactic: 0x4963fb96b4067e81
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x4963fb96b4067e81 Time: 1.60734
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v1 Tactic: 0x49ecad9da64c487b
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x49ecad9da64c487b Time: 1.69779
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v0 Tactic: 0x4c5584586319b832
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x4c5584586319b832 Time: 2.06507
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v1 Tactic: 0x5c38385751ccb068
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x5c38385751ccb068 Time: 2.01455
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v0 Tactic: 0x632674f65e3422ae
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x632674f65e3422ae Time: 3.23004
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x128_relu_medium_nn_v0 Tactic: 0x8d563cb6e2bd3e46
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x8d563cb6e2bd3e46 Time: 1.62509
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_relu_interior_nn_v1 Tactic: 0xa4bca1d50cb9f7ec
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xa4bca1d50cb9f7ec Time: 4.00418
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_relu_medium_nn_v0 Tactic: 0xbd90052d8b47dde9
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xbd90052d8b47dde9 Time: 3.20102
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_relu_small_nn_v1 Tactic: 0xd00838485d937dc1
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xd00838485d937dc1 Time: 4.58923
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_relu_medium_nn_v0 Tactic: 0xef1674e9526bef07
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xef1674e9526bef07 Time: 2.07531
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_relu_small_nn_v0 Tactic: 0xf462d2631d68e4d5
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xf462d2631d68e4d5 Time: 2.05756
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x128_relu_small_nn_v1 Tactic: 0xfa4db728b7a121ee
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xfa4db728b7a121ee Time: 1.68755
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x128_relu_interior_nn_v0 Tactic: 0xfac2e123a5eb1714
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xfac2e123a5eb1714 Time: 1.59061
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_relu_interior_nn_v1 Tactic: 0xff7bc8e660bee75d
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0xff7bc8e660bee75d Time: 2.01455
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0xfac2e123a5eb1714 Time: 1.59061
[09/07/2022-04:04:54] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CublasConvolution Tactic: 0x0000000000000001
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (CublasConvolution)
[09/07/2022-04:04:54] [TRT] [V] CublasConvolution has no valid tactics for this config, skipping
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 (CaskConvolution)
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x35f071de80e3b3c4 Time: 1.33188
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_sliced1x4_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x5c024b37b78e77c0
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x5c024b37b78e77c0 Time: 1.38923
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x32_sliced1x4_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x80f932c0b8ce5940
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x80f932c0b8ce5940 Time: 1.40015
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_small_nhwc_tn_v1 Tactic: 0x9961ac24fc07a1df
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x9961ac24fc07a1df Time: 1.34007
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0x35f071de80e3b3c4 Time: 1.33188
[09/07/2022-04:04:54] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: CaskConvolution Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(2048,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,256,256) -> Float(2048,1,2048,2048) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,1,1) -> Float(256,1,1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(2048,1,2048,2048) -> Float(256,1,256,256) ***************
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1,1,1) -> Float(256,1) ***************
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: squeeze_after_ReLUD-9 (Shuffle)
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0874987
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.171349
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0874987
[09/07/2022-04:04:54] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(256,1) -> Float(1) ***************
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: Reduce (Reduce)
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0412255
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.291157
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000003 Time: 0.0915627
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000004 Time: 0.0919573
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000007 Time: 0.09088
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000008 Time: 0.0907093
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0412255
[09/07/2022-04:04:54] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Reduce Tactic: 0x0000000000000000
[09/07/2022-04:04:54] [TRT] [V] =============== Computing costs for 
[09/07/2022-04:04:54] [TRT] [V] *************** Autotuning format combination: Float(1) -> Float((# 1 (SHAPE tensor-0)),1,1) ***************
[09/07/2022-04:04:54] [TRT] [V] --------------- Timing Runner: myReshapeN-output (Shuffle)
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000000 Time: 0.0068676
[09/07/2022-04:04:54] [TRT] [V] Tactic: 0x0000000000000001 Time: 0.0118017
[09/07/2022-04:04:54] [TRT] [V] Fastest Tactic: 0x0000000000000000 Time: 0.0068676
[09/07/2022-04:04:54] [TRT] [V] >>>>>>>>>>>>>>> Chose Runner Type: Shuffle Tactic: 0x0000000000000000
[09/07/2022-04:04:54] [TRT] [V] Adding reformat layer: Reformatted Input Tensor 0 to MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 (MMU0_out_tensor) from Float(256,1,1,1) to Float(256,1,256,256)
[09/07/2022-04:04:54] [TRT] [V] Adding reformat layer: Reformatted Input Tensor 0 to squeeze_after_ReLUD-9 (ReLUD-9_out_tensor) from Float(256,1,256,256) to Float(256,1,1,1)
[09/07/2022-04:04:54] [TRT] [V] Formats and tactics selection completed in 4.85766 seconds.
[09/07/2022-04:04:54] [TRT] [V] After reformat layers: 27 layers
[09/07/2022-04:04:54] [TRT] [V] Pre-optimized block assignment.
[09/07/2022-04:04:54] [TRT] [V] Block size 4
[09/07/2022-04:04:54] [TRT] [V] Block size 4
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 4
[09/07/2022-04:04:54] [TRT] [V] Block size 4
[09/07/2022-04:04:54] [TRT] [V] Block size 4
[09/07/2022-04:04:54] [TRT] [V] Block size 23622320128
[09/07/2022-04:04:54] [TRT] [V] Total Activation Memory: 24385683476
[09/07/2022-04:04:54] [TRT] [I] Detected 1 inputs and 1 output network tensors.
[09/07/2022-04:04:54] [TRT] [V] MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-1 + constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output + AddU-1 + ReLUU-1 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-1 + constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output + AddD-1 + ReLUD-1 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-2 + constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output + AddU-2 + ReLUU-2 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-2 + constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output + AddD-2 + ReLUD-2 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-3 + constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output + AddU-3 + ReLUU-3 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-3 + constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output + AddD-3 + ReLUD-3 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-4 + constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output + AddU-4 + ReLUU-4 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-4 + constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output + AddD-4 + ReLUD-4 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-5 + constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output + AddU-5 + ReLUU-5 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-5 + constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output + AddD-5 + ReLUD-5 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-6 + constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output + AddU-6 + ReLUU-6 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-6 + constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output + AddD-6 + ReLUD-6 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-7 + constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output + AddU-7 + ReLUU-7 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-7 + constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output + AddD-7 + ReLUD-7 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-8 + constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output + AddU-8 + ReLUU-8 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-8 + constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output + AddD-8 + ReLUD-8 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMU-9 + constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output + AddU-9 + ReLUU-9 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] MMD-9 + constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output + AddD-9 + ReLUD-9 Set Tactic Name: maxwell_scudnn_128x64_sliced1x2_ldg4_relu_exp_interior_nhwc_tn_v1 Tactic: 0x35f071de80e3b3c4
[09/07/2022-04:04:54] [TRT] [V] Layer: myReshapeN-input + reshape_before_MMU0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: Reformatting CopyNode for Input Tensor 0 to MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-1 + constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output + AddU-1 + ReLUU-1 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-1 + constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output + AddD-1 + ReLUD-1 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-2 + constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output + AddU-2 + ReLUU-2 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-2 + constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output + AddD-2 + ReLUD-2 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-3 + constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output + AddU-3 + ReLUU-3 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-3 + constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output + AddD-3 + ReLUD-3 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-4 + constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output + AddU-4 + ReLUU-4 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-4 + constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output + AddD-4 + ReLUD-4 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-5 + constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output + AddU-5 + ReLUU-5 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-5 + constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output + AddD-5 + ReLUD-5 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-6 + constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output + AddU-6 + ReLUU-6 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-6 + constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output + AddD-6 + ReLUD-6 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-7 + constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output + AddU-7 + ReLUU-7 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-7 + constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output + AddD-7 + ReLUD-7 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-8 + constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output + AddU-8 + ReLUU-8 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-8 + constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output + AddD-8 + ReLUD-8 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMU-9 + constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output + AddU-9 + ReLUU-9 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: MMD-9 + constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output + AddD-9 + ReLUD-9 Host Persistent: 3200 Device Persistent: 512 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: Reformatting CopyNode for Input Tensor 0 to squeeze_after_ReLUD-9 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: squeeze_after_ReLUD-9 Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: Reduce Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [V] Layer: myReshapeN-output Host Persistent: 0 Device Persistent: 0 Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [I] Total Host Persistent Memory: 64000
[09/07/2022-04:04:54] [TRT] [I] Total Device Persistent Memory: 10240
[09/07/2022-04:04:54] [TRT] [I] Total Scratch Memory: 0
[09/07/2022-04:04:54] [TRT] [I] [MemUsageStats] Peak memory usage of TRT CPU/GPU memory allocators: CPU 44 MiB, GPU 4617 MiB
[09/07/2022-04:04:54] [TRT] [I] [BlockAssignment] Algorithm ShiftNTopDown took 0.178284ms to assign 3 blocks to 26 nodes requiring 75497476 bytes.
[09/07/2022-04:04:54] [TRT] [V] Optimized block assignment.
[09/07/2022-04:04:54] [TRT] [V] Block size 67108864
[09/07/2022-04:04:54] [TRT] [V] Block size 8388608
[09/07/2022-04:04:54] [TRT] [V] Block size 4
[09/07/2022-04:04:54] [TRT] [I] Total Activation Memory: 75497476
[09/07/2022-04:04:54] [TRT] [V] Disabling unused tactic source: CUDNN
[09/07/2022-04:04:54] [TRT] [V] Using cublas as a tactic source
[09/07/2022-04:04:54] [TRT] [I] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +8, now: CPU 960, GPU 711 (MiB)
[09/07/2022-04:04:54] [TRT] [V] Engine generation completed in 4.98158 seconds.
[09/07/2022-04:04:54] [TRT] [V] Deleting timing cache: 18 entries, served 74 hits since creation.
[09/07/2022-04:04:54] [TRT] [V] Engine Layer Information:
Layer(NoOp): myReshapeN-input + reshape_before_MMU0, Tactic: 0x0000000000000000, tensor-0[Float(-3,-4,1)] -> reshape_before_MMU0_out_region[Float(-6,1,1,1)]
Layer(CublasConvolution): MMU0, Tactic: 0x0000000000000000, reshape_before_MMU0_out_region[Float(-6,1,1,1)] -> MMU0_out_region[Float(-6,256,1,1)]
Layer(NoOp): Reformatting CopyNode for Input Tensor 0 to MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0, Tactic: 0x0000000000000000, MMU0_out_region[Float(-6,256,1,1)] -> Reformatted Input Tensor 0 to MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0, Tactic: 0x35f071de80e3b3c4, Reformatted Input Tensor 0 to MMU-0 + constant2048 + (Unnamed Layer* 16) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 16) [Shuffle]_(Unnamed Layer* 16) [Shuffle]_output + AddU-0 + ReLUU-0[Float(-6,256,1,1)] -> ReLUU-0_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-0 + constant256 + (Unnamed Layer* 22) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 22) [Shuffle]_(Unnamed Layer* 22) [Shuffle]_output + AddD-0 + ReLUD-0, Tactic: 0x35f071de80e3b3c4, ReLUU-0_out_tensor[Float(-6,2048,1,1)] -> ReLUD-0_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-1 + constant2048_clone_1 + (Unnamed Layer* 26) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 26) [Shuffle]_(Unnamed Layer* 26) [Shuffle]_output + AddU-1 + ReLUU-1, Tactic: 0x35f071de80e3b3c4, ReLUD-0_out_tensor[Float(-6,256,1,1)] -> ReLUU-1_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-1 + constant256_clone_1 + (Unnamed Layer* 30) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 30) [Shuffle]_(Unnamed Layer* 30) [Shuffle]_output + AddD-1 + ReLUD-1, Tactic: 0x35f071de80e3b3c4, ReLUU-1_out_tensor[Float(-6,2048,1,1)] -> ReLUD-1_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-2 + constant2048_clone_2 + (Unnamed Layer* 34) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 34) [Shuffle]_(Unnamed Layer* 34) [Shuffle]_output + AddU-2 + ReLUU-2, Tactic: 0x35f071de80e3b3c4, ReLUD-1_out_tensor[Float(-6,256,1,1)] -> ReLUU-2_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-2 + constant256_clone_2 + (Unnamed Layer* 38) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 38) [Shuffle]_(Unnamed Layer* 38) [Shuffle]_output + AddD-2 + ReLUD-2, Tactic: 0x35f071de80e3b3c4, ReLUU-2_out_tensor[Float(-6,2048,1,1)] -> ReLUD-2_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-3 + constant2048_clone_3 + (Unnamed Layer* 42) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 42) [Shuffle]_(Unnamed Layer* 42) [Shuffle]_output + AddU-3 + ReLUU-3, Tactic: 0x35f071de80e3b3c4, ReLUD-2_out_tensor[Float(-6,256,1,1)] -> ReLUU-3_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-3 + constant256_clone_3 + (Unnamed Layer* 46) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 46) [Shuffle]_(Unnamed Layer* 46) [Shuffle]_output + AddD-3 + ReLUD-3, Tactic: 0x35f071de80e3b3c4, ReLUU-3_out_tensor[Float(-6,2048,1,1)] -> ReLUD-3_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-4 + constant2048_clone_4 + (Unnamed Layer* 50) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 50) [Shuffle]_(Unnamed Layer* 50) [Shuffle]_output + AddU-4 + ReLUU-4, Tactic: 0x35f071de80e3b3c4, ReLUD-3_out_tensor[Float(-6,256,1,1)] -> ReLUU-4_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-4 + constant256_clone_4 + (Unnamed Layer* 54) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 54) [Shuffle]_(Unnamed Layer* 54) [Shuffle]_output + AddD-4 + ReLUD-4, Tactic: 0x35f071de80e3b3c4, ReLUU-4_out_tensor[Float(-6,2048,1,1)] -> ReLUD-4_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-5 + constant2048_clone_5 + (Unnamed Layer* 58) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 58) [Shuffle]_(Unnamed Layer* 58) [Shuffle]_output + AddU-5 + ReLUU-5, Tactic: 0x35f071de80e3b3c4, ReLUD-4_out_tensor[Float(-6,256,1,1)] -> ReLUU-5_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-5 + constant256_clone_5 + (Unnamed Layer* 62) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 62) [Shuffle]_(Unnamed Layer* 62) [Shuffle]_output + AddD-5 + ReLUD-5, Tactic: 0x35f071de80e3b3c4, ReLUU-5_out_tensor[Float(-6,2048,1,1)] -> ReLUD-5_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-6 + constant2048_clone_6 + (Unnamed Layer* 66) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 66) [Shuffle]_(Unnamed Layer* 66) [Shuffle]_output + AddU-6 + ReLUU-6, Tactic: 0x35f071de80e3b3c4, ReLUD-5_out_tensor[Float(-6,256,1,1)] -> ReLUU-6_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-6 + constant256_clone_6 + (Unnamed Layer* 70) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 70) [Shuffle]_(Unnamed Layer* 70) [Shuffle]_output + AddD-6 + ReLUD-6, Tactic: 0x35f071de80e3b3c4, ReLUU-6_out_tensor[Float(-6,2048,1,1)] -> ReLUD-6_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-7 + constant2048_clone_7 + (Unnamed Layer* 74) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 74) [Shuffle]_(Unnamed Layer* 74) [Shuffle]_output + AddU-7 + ReLUU-7, Tactic: 0x35f071de80e3b3c4, ReLUD-6_out_tensor[Float(-6,256,1,1)] -> ReLUU-7_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-7 + constant256_clone_7 + (Unnamed Layer* 78) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 78) [Shuffle]_(Unnamed Layer* 78) [Shuffle]_output + AddD-7 + ReLUD-7, Tactic: 0x35f071de80e3b3c4, ReLUU-7_out_tensor[Float(-6,2048,1,1)] -> ReLUD-7_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-8 + constant2048_clone_8 + (Unnamed Layer* 82) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 82) [Shuffle]_(Unnamed Layer* 82) [Shuffle]_output + AddU-8 + ReLUU-8, Tactic: 0x35f071de80e3b3c4, ReLUD-7_out_tensor[Float(-6,256,1,1)] -> ReLUU-8_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-8 + constant256_clone_8 + (Unnamed Layer* 86) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 86) [Shuffle]_(Unnamed Layer* 86) [Shuffle]_output + AddD-8 + ReLUD-8, Tactic: 0x35f071de80e3b3c4, ReLUU-8_out_tensor[Float(-6,2048,1,1)] -> ReLUD-8_out_tensor[Float(-6,256,1,1)]
Layer(CaskConvolution): MMU-9 + constant2048_clone_9 + (Unnamed Layer* 90) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 90) [Shuffle]_(Unnamed Layer* 90) [Shuffle]_output + AddU-9 + ReLUU-9, Tactic: 0x35f071de80e3b3c4, ReLUD-8_out_tensor[Float(-6,256,1,1)] -> ReLUU-9_out_tensor[Float(-6,2048,1,1)]
Layer(CaskConvolution): MMD-9 + constant256_clone_9 + (Unnamed Layer* 94) [Shuffle] + unsqueeze_node_after_(Unnamed Layer* 94) [Shuffle]_(Unnamed Layer* 94) [Shuffle]_output + AddD-9 + ReLUD-9, Tactic: 0x35f071de80e3b3c4, ReLUU-9_out_tensor[Float(-6,2048,1,1)] -> ReLUD-9_out_tensor[Float(-6,256,1,1)]
Layer(NoOp): Reformatting CopyNode for Input Tensor 0 to squeeze_after_ReLUD-9, Tactic: 0x0000000000000000, ReLUD-9_out_tensor[Float(-6,256,1,1)] -> Reformatted Input Tensor 0 to squeeze_after_ReLUD-9[Float(-6,256,1,1)]
Layer(NoOp): squeeze_after_ReLUD-9, Tactic: 0x0000000000000000, Reformatted Input Tensor 0 to squeeze_after_ReLUD-9[Float(-6,256,1,1)] -> squeeze_after_ReLUD-9_out_tensor[Float(-6,256)]
Layer(Reduce): Reduce, Tactic: 0x0000000000000000, squeeze_after_ReLUD-9_out_tensor[Float(-6,256)] -> tensor-8[Float(-6)]
Layer(NoOp): myReshapeN-output, Tactic: 0x0000000000000000, tensor-8[Float(-6)] -> reshapeV-output[Float(-3,-4,1)]
[09/07/2022-04:04:54] [TRT] [I] [MemUsageChange] TensorRT-managed allocation in building engine: CPU +40, GPU +5, now: CPU 40, GPU 5 (MiB)
[09/07/2022-04:04:54] [TRT] [W] The getMaxBatchSize() function should not be used with an engine built from a network created with NetworkDefinitionCreationFlag::kEXPLICIT_BATCH flag. This function will always return 1.
[09/07/2022-04:04:54] [TRT] [W] The getMaxBatchSize() function should not be used with an engine built from a network created with NetworkDefinitionCreationFlag::kEXPLICIT_BATCH flag. This function will always return 1.
&&&& RUNNING TensorRT.trtexec [TensorRT v8401] # trtexec --loadEngine=model-2D.plan --verbose --useCudaGraph --noDataTransfers --shapes=tensor-0:32x256x1
[09/07/2022-04:04:54] [I] === Model Options ===
[09/07/2022-04:04:54] [I] Format: *
[09/07/2022-04:04:54] [I] Model: 
[09/07/2022-04:04:54] [I] Output:
[09/07/2022-04:04:54] [I] === Build Options ===
[09/07/2022-04:04:54] [I] Max batch: explicit batch
[09/07/2022-04:04:54] [I] Memory Pools: workspace: default, dlaSRAM: default, dlaLocalDRAM: default, dlaGlobalDRAM: default
[09/07/2022-04:04:54] [I] minTiming: 1
[09/07/2022-04:04:54] [I] avgTiming: 8
[09/07/2022-04:04:54] [I] Precision: FP32
[09/07/2022-04:04:54] [I] LayerPrecisions: 
[09/07/2022-04:04:54] [I] Calibration: 
[09/07/2022-04:04:54] [I] Refit: Disabled
[09/07/2022-04:04:54] [I] Sparsity: Disabled
[09/07/2022-04:04:54] [I] Safe mode: Disabled
[09/07/2022-04:04:54] [I] DirectIO mode: Disabled
[09/07/2022-04:04:54] [I] Restricted mode: Disabled
[09/07/2022-04:04:54] [I] Build only: Disabled
[09/07/2022-04:04:54] [I] Save engine: 
[09/07/2022-04:04:54] [I] Load engine: model-2D.plan
[09/07/2022-04:04:54] [I] Profiling verbosity: 0
[09/07/2022-04:04:54] [I] Tactic sources: Using default tactic sources
[09/07/2022-04:04:54] [I] timingCacheMode: local
[09/07/2022-04:04:54] [I] timingCacheFile: 
[09/07/2022-04:04:54] [I] Input(s)s format: fp32:CHW
[09/07/2022-04:04:54] [I] Output(s)s format: fp32:CHW
[09/07/2022-04:04:54] [I] Input build shape: tensor-0=32x256x1+32x256x1+32x256x1
[09/07/2022-04:04:54] [I] Input calibration shapes: model
[09/07/2022-04:04:54] [I] === System Options ===
[09/07/2022-04:04:54] [I] Device: 0
[09/07/2022-04:04:54] [I] DLACore: 
[09/07/2022-04:04:54] [I] Plugins:
[09/07/2022-04:04:54] [I] === Inference Options ===
[09/07/2022-04:04:54] [I] Batch: Explicit
[09/07/2022-04:04:54] [I] Input inference shape: tensor-0=32x256x1
[09/07/2022-04:04:54] [I] Iterations: 10
[09/07/2022-04:04:54] [I] Duration: 3s (+ 200ms warm up)
[09/07/2022-04:04:54] [I] Sleep time: 0ms
[09/07/2022-04:04:54] [I] Idle time: 0ms
[09/07/2022-04:04:54] [I] Streams: 1
[09/07/2022-04:04:54] [I] ExposeDMA: Disabled
[09/07/2022-04:04:54] [I] Data transfers: Disabled
[09/07/2022-04:04:54] [I] Spin-wait: Disabled
[09/07/2022-04:04:54] [I] Multithreading: Disabled
[09/07/2022-04:04:54] [I] CUDA Graph: Enabled
[09/07/2022-04:04:54] [I] Separate profiling: Disabled
[09/07/2022-04:04:54] [I] Time Deserialize: Disabled
[09/07/2022-04:04:54] [I] Time Refit: Disabled
[09/07/2022-04:04:54] [I] Inputs:
[09/07/2022-04:04:54] [I] === Reporting Options ===
[09/07/2022-04:04:54] [I] Verbose: Enabled
[09/07/2022-04:04:54] [I] Averages: 10 inferences
[09/07/2022-04:04:54] [I] Percentile: 99
[09/07/2022-04:04:54] [I] Dump refittable layers:Disabled
[09/07/2022-04:04:54] [I] Dump output: Disabled
[09/07/2022-04:04:54] [I] Profile: Disabled
[09/07/2022-04:04:54] [I] Export timing to JSON file: 
[09/07/2022-04:04:54] [I] Export output to JSON file: 
[09/07/2022-04:04:54] [I] Export profile to JSON file: 
[09/07/2022-04:04:54] [I] 
[09/07/2022-04:04:54] [I] === Device Information ===
[09/07/2022-04:04:54] [I] Selected Device: NVIDIA GeForce GTX 1070
[09/07/2022-04:04:54] [I] Compute Capability: 6.1
[09/07/2022-04:04:54] [I] SMs: 16
[09/07/2022-04:04:54] [I] Compute Clock Rate: 1.645 GHz
[09/07/2022-04:04:54] [I] Device Global Memory: 8111 MiB
[09/07/2022-04:04:54] [I] Shared Memory per SM: 96 KiB
[09/07/2022-04:04:54] [I] Memory Bus Width: 256 bits (ECC disabled)
[09/07/2022-04:04:54] [I] Memory Clock Rate: 4.004 GHz
[09/07/2022-04:04:54] [I] 
[09/07/2022-04:04:54] [I] TensorRT version: 8.4.1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::BatchTilePlugin_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::BatchedNMS_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::BatchedNMSDynamic_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::CoordConvAC version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::CropAndResize version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::CropAndResizeDynamic version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::DecodeBbox3DPlugin version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::DetectionLayer_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::EfficientNMS_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::EfficientNMS_ONNX_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::EfficientNMS_Explicit_TF_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::EfficientNMS_Implicit_TF_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::FlattenConcat_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::GenerateDetection_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::GridAnchor_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::GridAnchorRect_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::InstanceNormalization_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::LReLU_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::MultilevelCropAndResize_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::MultilevelProposeROI_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::MultiscaleDeformableAttnPlugin_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::NMS_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::NMSDynamic_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::Normalize_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::PillarScatterPlugin version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::PriorBox_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::ProposalLayer_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::Proposal version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::ProposalDynamic version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::PyramidROIAlign_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::Region_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::Reorg_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::ResizeNearest_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::RPROI_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::ScatterND version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::SpecialSlice_TRT version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::Split version 1
[09/07/2022-04:04:54] [V] [TRT] Registered plugin creator - ::VoxelGeneratorPlugin version 1
[09/07/2022-04:04:54] [I] Engine loaded in 0.00303451 sec.
[09/07/2022-04:04:54] [I] [TRT] [MemUsageChange] Init CUDA: CPU +195, GPU +0, now: CPU 207, GPU 846 (MiB)
[09/07/2022-04:04:54] [I] [TRT] Loaded engine size: 4 MiB
[09/07/2022-04:04:55] [V] [TRT] Using cublas as a tactic source
[09/07/2022-04:04:55] [I] [TRT] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +255, GPU +106, now: CPU 481, GPU 958 (MiB)
[09/07/2022-04:04:55] [V] [TRT] Deserialization required 209288 microseconds.
[09/07/2022-04:04:55] [I] [TRT] [MemUsageChange] TensorRT-managed allocation in engine deserialization: CPU +0, GPU +4, now: CPU 0, GPU 4 (MiB)
[09/07/2022-04:04:55] [I] Engine deserialized in 0.408663 sec.
[09/07/2022-04:04:55] [V] [TRT] Using cublas as a tactic source
[09/07/2022-04:04:55] [I] [TRT] [MemUsageChange] Init cuBLAS/cuBLASLt: CPU +0, GPU +8, now: CPU 481, GPU 958 (MiB)
[09/07/2022-04:04:55] [V] [TRT] Total per-runner device persistent memory is 10240
[09/07/2022-04:04:55] [V] [TRT] Total per-runner host persistent memory is 64000
[09/07/2022-04:04:55] [V] [TRT] Allocated activation device memory of size 75497984
[09/07/2022-04:04:55] [I] [TRT] [MemUsageChange] TensorRT-managed allocation in IExecutionContext creation: CPU +0, GPU +72, now: CPU 0, GPU 76 (MiB)
[09/07/2022-04:04:55] [I] Using random values for input tensor-0
[09/07/2022-04:04:55] [I] Created input binding for tensor-0 with dimensions 32x256x1
[09/07/2022-04:04:55] [I] Using random values for output reshapeV-output
[09/07/2022-04:04:55] [I] Created output binding for reshapeV-output with dimensions 32x256x1
[09/07/2022-04:04:55] [I] Starting inference
[09/07/2022-04:04:58] [I] Warmup completed 5 queries over 200 ms
[09/07/2022-04:04:58] [I] Timing trace has 87 queries over 3.07437 s
[09/07/2022-04:04:58] [I] 
[09/07/2022-04:04:58] [I] === Trace details ===
[09/07/2022-04:04:58] [I] Trace averages of 10 runs:
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.6304 ms - Host latency: 35.6304 ms (enqueue 0.0413803 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.297 ms - Host latency: 35.297 ms (enqueue 0.0431458 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.2967 ms - Host latency: 35.2967 ms (enqueue 0.0434021 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.2966 ms - Host latency: 35.2966 ms (enqueue 0.0382935 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.2958 ms - Host latency: 35.2958 ms (enqueue 0.0426147 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.2872 ms - Host latency: 35.2872 ms (enqueue 0.0432983 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.3141 ms - Host latency: 35.3141 ms (enqueue 0.042749 ms)
[09/07/2022-04:04:58] [I] Average on 10 runs - GPU latency: 35.2985 ms - Host latency: 35.2985 ms (enqueue 0.0452148 ms)
[09/07/2022-04:04:58] [I] 
[09/07/2022-04:04:58] [I] === Performance summary ===
[09/07/2022-04:04:58] [I] Throughput: 28.2985 qps
[09/07/2022-04:04:58] [I] Latency: min = 35.2705 ms, max = 36.1564 ms, mean = 35.3361 ms, median = 35.2983 ms, percentile(99%) = 36.1564 ms
[09/07/2022-04:04:58] [I] Enqueue Time: min = 0.0158691 ms, max = 0.0600586 ms, mean = 0.0425575 ms, median = 0.0432129 ms, percentile(99%) = 0.0600586 ms
[09/07/2022-04:04:58] [I] H2D Latency: min = 0 ms, max = 0 ms, mean = 0 ms, median = 0 ms, percentile(99%) = 0 ms
[09/07/2022-04:04:58] [I] GPU Compute Time: min = 35.2705 ms, max = 36.1564 ms, mean = 35.3361 ms, median = 35.2983 ms, percentile(99%) = 36.1564 ms
[09/07/2022-04:04:58] [I] D2H Latency: min = 0 ms, max = 0 ms, mean = 0 ms, median = 0 ms, percentile(99%) = 0 ms
[09/07/2022-04:04:58] [I] Total Host Walltime: 3.07437 s
[09/07/2022-04:04:58] [I] Total GPU Compute Time: 3.07424 s
[09/07/2022-04:04:58] [I] Explanations of the performance metrics are printed in the verbose logs.
[09/07/2022-04:04:58] [V] 
[09/07/2022-04:04:58] [V] === Explanations of the performance metrics ===
[09/07/2022-04:04:58] [V] Total Host Walltime: the host walltime from when the first query (after warmups) is enqueued to when the last query is completed.
[09/07/2022-04:04:58] [V] GPU Compute Time: the GPU latency to execute the kernels for a query.
[09/07/2022-04:04:58] [V] Total GPU Compute Time: the summation of the GPU Compute Time of all the queries. If this is significantly shorter than Total Host Walltime, the GPU may be under-utilized because of host-side overheads or data transfers.
[09/07/2022-04:04:58] [V] Throughput: the observed throughput computed by dividing the number of queries by the Total Host Walltime. If this is significantly lower than the reciprocal of GPU Compute Time, the GPU may be under-utilized because of host-side overheads or data transfers.
[09/07/2022-04:04:58] [V] Enqueue Time: the host latency to enqueue a query. If this is longer than GPU Compute Time, the GPU may be under-utilized.
[09/07/2022-04:04:58] [V] H2D Latency: the latency for host-to-device data transfers for input tensors of a single query.
[09/07/2022-04:04:58] [V] D2H Latency: the latency for device-to-host data transfers for output tensors of a single query.
[09/07/2022-04:04:58] [V] Latency: the summation of H2D Latency, GPU Compute Time, and D2H Latency. This is the latency to infer a single query.
[09/07/2022-04:04:58] [I] 
&&&& PASSED TensorRT.trtexec [TensorRT v8401] # trtexec --loadEngine=model-2D.plan --verbose --useCudaGraph --noDataTransfers --shapes=tensor-0:32x256x1
main.py:148: DeprecationWarning: Use set_memory_pool_limit instead.
  config.max_workspace_size = 22 << 30
Succeeded building model-3D.onnx!
Succeeded building model-2D.onnx!
Succeeded building model-3D.plan!
Succeeded building model-2D.plan!
